Inspecting 156 files
CCCC.CWCWCWCCCCWCWCCC...WWWC..CCCCC.CC.C...C.CC.CCCCCC..CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC.CCWCCCCCCCCCCCCCCCCCWCCCCCCCCCCC

Offenses:

app/admin/admin_user.rb:20:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    f.inputs "Admin Details" do
             ^^^^^^^^^^^^^^^
app/admin/asset.rb:3:1: C: Extra blank line detected.
app/admin/asset.rb:17:1: C: Extra blank line detected.
app/admin/dashboard.rb:1:27: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveAdmin.register_page "Dashboard" do
                          ^^^^^^^^^^^
app/admin/dashboard.rb:3:32: C: Space missing to the left of {.
  menu priority: 1, label: proc{ I18n.t("active_admin.dashboard") }
                               ^
app/admin/dashboard.rb:3:41: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  menu priority: 1, label: proc{ I18n.t("active_admin.dashboard") }
                                        ^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:5:22: C: Space missing to the left of {.
  content title: proc{ I18n.t("active_admin.dashboard") } do
                     ^
app/admin/dashboard.rb:5:31: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  content title: proc{ I18n.t("active_admin.dashboard") } do
                              ^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:6:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    div class: "blank_slate_container", id: "dashboard_default_message" do
               ^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:6:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    div class: "blank_slate_container", id: "dashboard_default_message" do
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:7:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      span class: "blank_slate" do
                  ^^^^^^^^^^^^^
app/admin/dashboard.rb:8:21: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        span I18n.t("active_admin.dashboard_welcome.welcome")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:9:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        small I18n.t("active_admin.dashboard_welcome.call_to_action")
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/flag.rb:3:1: C: Extra blank line detected.
app/admin/flag.rb:17:1: C: Extra blank line detected.
app/admin/user.rb:3:1: C: Extra blank line detected.
app/admin/user.rb:17:1: C: Extra blank line detected.
app/controllers/application_controller.rb:1:1: C: Missing top-level class documentation comment.
class ApplicationController < ActionController::Base
^^^^^
app/controllers/application_controller.rb:7:3: C: Prefer after_action over after_filter.
  after_filter :store_location
  ^^^^^^^^^^^^
app/controllers/application_controller.rb:9:3: C: Assignment Branch Condition size for store_location is too high. [31.32/15]
  def store_location
  ^^^
app/controllers/application_controller.rb:9:3: C: Cyclomatic complexity for store_location is too high. [10/6]
  def store_location
  ^^^
app/controllers/application_controller.rb:9:3: C: Method has too many lines. [11/10]
  def store_location
  ^^^
app/controllers/application_controller.rb:9:3: C: Perceived complexity for store_location is too high. [10/7]
  def store_location
  ^^^
app/controllers/application_controller.rb:10:81: C: Line is too long. [96/80]
    # store last url - this is needed for post-login redirect to whatever the user last visited.
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:12:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if (request.path != "/users/sign_in" &&
    ^^
app/controllers/application_controller.rb:12:8: C: Don't use parentheses around the condition of an if.
    if (request.path != "/users/sign_in" &&
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:12:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if (request.path != "/users/sign_in" &&
                        ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:13:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        request.path != "/users/sign_up" &&
                        ^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:14:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        request.path != "/users/password/new" &&
                        ^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:15:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        request.path != "/users/password/edit" &&
                        ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:16:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        request.path != "/users/confirmation" &&
                        ^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:17:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        request.path != "/users/finish_registration" &&
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:18:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        request.path != "/users/sign_out" &&
                        ^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:24:30: W: Unused method argument - resource. If it's necessary, use _ or _resource as an argument name to indicate that it won't be used. You can also write as after_sign_in_path_for(*) if you want the method to accept any arguments but don't care about them.
  def after_sign_in_path_for(resource)
                             ^^^^^^^^
app/controllers/application_controller.rb:31:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if current_user && !current_user.finished_registration?
    ^^
app/controllers/application_controller.rb:36:3: C: Keep a blank line before and after protected.
  protected
  ^^^^^^^^^
app/controllers/application_controller.rb:37:5: C: Inconsistent indentation detected.
    def configure_permitted_parameters
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assets_controller.rb:1:1: C: Missing top-level class documentation comment.
class AssetsController < ApplicationController
^^^^^
app/controllers/assets_controller.rb:7:3: C: Assignment Branch Condition size for create is too high. [19.26/15]
  def create
  ^^^
app/controllers/assets_controller.rb:27:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:notice] = "File removed succesfully."
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assets_controller.rb:29:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:error] = "You do not have permission to remove this file."
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assets_controller.rb:36:81: C: Line is too long. [94/80]
    if sheet.is_free? || sheet.purchased_by?(current_user) || sheet.uploaded_by?(current_user)
                                                                                ^^^^^^^^^^^^^^
app/controllers/assets_controller.rb:45:3: C: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/assets_controller.rb:46:5: C: Inconsistent indentation detected.
    def set_asset
    ^^^^^^^^^^^^^
app/controllers/assets_controller.rb:50:5: C: Inconsistent indentation detected.
    def delete_s3_object(key)
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assets_controller.rb:56:5: C: Inconsistent indentation detected.
    def asset_params
    ^^^^^^^^^^^^^^^^
app/controllers/assets_controller.rb:60:5: C: Inconsistent indentation detected.
    def unescape_url
    ^^^^^^^^^^^^^^^^
app/controllers/assets_controller.rb:63:4: C: Final newline missing.
end

app/controllers/orders_controller.rb:1:1: C: Missing top-level class documentation comment.
class OrdersController < ApplicationController
^^^^^
app/controllers/orders_controller.rb:2:30: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  MARKETPLACE_PAYPAL_EMAIL = "yosriady-facilitator@gmail.com"
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:3:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  DEFAULT_CURRENCY = "USD"
                     ^^^^^
app/controllers/orders_controller.rb:4:36: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  SUCCESS_ORDER_PURCHASE_MESSAGE = "Great success! Thank you for your purchase."
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:5:35: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  CANCEL_ORDER_PURCHASE_MESSAGE = "Purchase canceled."
                                  ^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:7:38: C: Use the new Ruby 1.9 hash syntax.
  before_action :authenticate_user!, :only => [:checkout, :success, :cancel]
                                     ^^^^^^^^
app/controllers/orders_controller.rb:10:3: C: Assignment Branch Condition size for checkout is too high. [48.6/15]
  def checkout
  ^^^
app/controllers/orders_controller.rb:10:3: C: Method has too many lines. [26/10]
  def checkout
  ^^^
app/controllers/orders_controller.rb:12:81: C: Line is too long. [86/80]
    @order = Order.find_or_initialize_by(user_id: current_user.id, sheet_id: sheet.id)
                                                                                ^^^^^^
app/controllers/orders_controller.rb:23:7: C: Use snake_case for variable names.
      redirectURL = build_redirect_url(@pay_response.payKey)
      ^^^^^^^^^^^
app/controllers/orders_controller.rb:30:81: C: Line is too long. [113/80]
      Rails.logger.info "Paypal Error #{@pay_response.error.first.errorId}: #{@pay_response.error.first.message}"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:33:81: C: Line is too long. [101/80]
        flash[:error] = "We could not process your purchase. The uploader's Paypal email is invalid!"
                                                                                ^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:35:81: C: Line is too long. [98/80]
        flash[:error] = "We could not process your purchase. #{@pay_response.error.first.message}"
                                                                                ^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:42:5: C: Use snake_case for variable names.
    trackingId = params[:tracking_id]
    ^^^^^^^^^^
app/controllers/orders_controller.rb:46:14: C: Use the new Ruby 1.9 hash syntax.
      render :action => "thank_you", notice: SUCCESS_ORDER_PURCHASE_MESSAGE
             ^^^^^^^^^^
app/controllers/orders_controller.rb:46:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render :action => "thank_you", notice: SUCCESS_ORDER_PURCHASE_MESSAGE
                        ^^^^^^^^^^^
app/controllers/orders_controller.rb:48:7: C: Use fail instead of raise to signal exceptions.
      raise "Invalid Tracking Id"
      ^^^^^
app/controllers/orders_controller.rb:48:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise "Invalid Tracking Id"
            ^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:59:3: C: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/orders_controller.rb:60:5: C: Inconsistent indentation detected.
    def generate_token
    ^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:61:7: W: Useless assignment to variable - token.
      token = loop do
      ^^^^^
app/controllers/orders_controller.rb:67:5: C: Assignment Branch Condition size for build_adaptive_payment_request is too high. [46.1/15]
    def build_adaptive_payment_request(sheet)
    ^^^
app/controllers/orders_controller.rb:67:5: C: Method has too many lines. [17/10]
    def build_adaptive_payment_request(sheet)
    ^^^
app/controllers/orders_controller.rb:67:5: C: Inconsistent indentation detected.
    def build_adaptive_payment_request(sheet)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:68:7: C: Use snake_case for variable names.
      trackingId = generate_token
      ^^^^^^^^^^
app/controllers/orders_controller.rb:70:34: C: Do not use parentheses for method calls with no arguments.
      pay_request = api.build_pay()
                                 ^
app/controllers/orders_controller.rb:72:32: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      pay_request.actionType = "PAY"
                               ^^^^^
app/controllers/orders_controller.rb:82:58: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      pay_request.receiverList.receiver[0].paymentType = "DIGITALGOODS"
                                                         ^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:88:58: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      pay_request.receiverList.receiver[1].paymentType = "DIGITALGOODS"
                                                         ^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:89:7: C: Redundant return detected.
      return pay_request
      ^^^^^^
app/controllers/orders_controller.rb:92:5: C: Inconsistent indentation detected.
    def build_redirect_url(payKey)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:93:7: C: Redundant return detected.
      return "https://www.sandbox.paypal.com/webapps/adaptivepayment/flow/pay?paykey=#{payKey}"
      ^^^^^^
app/controllers/orders_controller.rb:93:87: C: Line is too long. [95/80]
      return "https://www.sandbox.paypal.com/webapps/adaptivepayment/flow/pay?paykey=#{payKey}"
                                                                                      ^^^^^^^^^
app/controllers/orders_controller.rb:96:5: C: Inconsistent indentation detected.
    def send_purchase_failure_email
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:97:81: C: Line is too long. [84/80]
      # TODO: Email user that purchase has failed because of invalid account details
                                                                                ^^^^
app/controllers/orders_controller.rb:100:5: C: Inconsistent indentation detected.
    def invalid_account_details_error?(pay_response)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:101:43: C: Separate every 3 digits in the integer portion of a number with underscores(_).
      pay_response.error.first.errorId == 520009
                                          ^^^^^^
app/controllers/orders_controller.rb:104:5: C: Inconsistent indentation detected.
    def validate_flagged
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/orders_controller.rb:106:7: C: Use a guard clause instead of wrapping the code inside a conditional expression.
      if sheet.is_flagged
      ^^
app/controllers/orders_controller.rb:111:4: C: Final newline missing.
end

app/controllers/pages_controller.rb:1:1: C: Missing top-level class documentation comment.
class PagesController < ApplicationController
^^^^^
app/controllers/pages_controller.rb:2:3: C: Prefer before_action over before_filter.
  before_filter :disable_navbar, only: [:index]
  ^^^^^^^^^^^^^
app/controllers/pages_controller.rb:16:3: C: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/pages_controller.rb:17:5: C: Inconsistent indentation detected.
    def disable_navbar
    ^^^^^^^^^^^^^^^^^^
app/controllers/pages_controller.rb:20:1: C: Extra empty line detected at class body end.
app/controllers/sheets_controller.rb:1:1: C: Class definition is too long. [204/100]
class SheetsController < ApplicationController
^^^^^
app/controllers/sheets_controller.rb:1:1: C: Missing top-level class documentation comment.
class SheetsController < ApplicationController
^^^^^
app/controllers/sheets_controller.rb:3:81: C: Line is too long. [94/80]
  before_action :set_sheet_lazy, only: [:edit, :report, :flag, :favorite, :destroy, :download]
                                                                                ^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:10:81: C: Line is too long. [89/80]
  before_action :hide_private_sheets, only: [:show, :report, :flag, :favorite, :download]
                                                                                ^^^^^^^^^
app/controllers/sheets_controller.rb:11:38: C: Use the new Ruby 1.9 hash syntax.
  before_action :authenticate_user!, :only => [:new, :create, :edit, :update, :destroy, :restore]
                                     ^^^^^^^^
app/controllers/sheets_controller.rb:11:81: C: Line is too long. [97/80]
  before_action :authenticate_user!, :only => [:new, :create, :edit, :update, :destroy, :restore]
                                                                                ^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:12:38: C: Use the new Ruby 1.9 hash syntax.
  before_action :authenticate_owner, :only => [:edit, :update, :destroy, :restore]
                                     ^^^^^^^^
app/controllers/sheets_controller.rb:12:81: C: Line is too long. [82/80]
  before_action :authenticate_owner, :only => [:edit, :update, :destroy, :restore]
                                                                                ^^
app/controllers/sheets_controller.rb:15:26: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  DEFAULT_FLAG_MESSAGE = "No Message."
                         ^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:16:81: C: Line is too long. [84/80]
  SUCCESS_FLAG_MESSAGE = "Succesfully reported! We'll come back to you in 72 hours."
                                                                                ^^^^
app/controllers/sheets_controller.rb:21:81: C: Line is too long. [81/80]
  SUCCESS_UPDATE_SHEET_MESSAGE = "Fine piece of work! You've updated your sheet."
                                                                                ^
app/controllers/sheets_controller.rb:22:81: C: Line is too long. [96/80]
  ERROR_UPDATE_SHEET_MESSAGE = 'Oops! You cannot edit this Sheet because you are not the owner.'
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:26:81: C: Line is too long. [84/80]
  ERROR_CANNOT_RESTORE_UNDESTROYED_SHEET = 'You cannot restore an un-deleted Sheet.'
                                                                                ^^^^
app/controllers/sheets_controller.rb:27:81: C: Line is too long. [81/80]
  ERROR_PDF_UNPURCHASED_MESSAGE = 'Buy now to get unlimited access to this file.'
                                                                                ^
app/controllers/sheets_controller.rb:34:3: C: Assignment Branch Condition size for index is too high. [15.81/15]
  def index
  ^^^
app/controllers/sheets_controller.rb:44:81: C: Line is too long. [96/80]
    @sheets = Sheet.is_public.search params[:q], page: params[:page], per_page: SEARCH_PAGE_SIZE
                                                                                ^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:58:81: C: Line is too long. [97/80]
    if @sheet.is_free? || @sheet.purchased_by?(current_user) || @sheet.uploaded_by?(current_user)
                                                                                ^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:72:81: C: Line is too long. [95/80]
    message = params[:flag][:message].present? ? params[:flag][:message] : DEFAULT_FLAG_MESSAGE
                                                                                ^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:73:21: C: Space missing after colon.
    Flag.create(user:current_user, sheet:@sheet, message:message, email:params[:flag][:email])
                    ^
app/controllers/sheets_controller.rb:73:41: C: Space missing after colon.
    Flag.create(user:current_user, sheet:@sheet, message:message, email:params[:flag][:email])
                                        ^
app/controllers/sheets_controller.rb:73:57: C: Space missing after colon.
    Flag.create(user:current_user, sheet:@sheet, message:message, email:params[:flag][:email])
                                                        ^
app/controllers/sheets_controller.rb:73:72: C: Space missing after colon.
    Flag.create(user:current_user, sheet:@sheet, message:message, email:params[:flag][:email])
                                                                       ^
app/controllers/sheets_controller.rb:73:81: C: Line is too long. [94/80]
    Flag.create(user:current_user, sheet:@sheet, message:message, email:params[:flag][:email])
                                                                                ^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:78:3: C: Assignment Branch Condition size for favorite is too high. [18.68/15]
  def favorite
  ^^^
app/controllers/sheets_controller.rb:78:3: C: Method has too many lines. [12/10]
  def favorite
  ^^^
app/controllers/sheets_controller.rb:105:3: C: Assignment Branch Condition size for create is too high. [21.12/15]
  def create
  ^^^
app/controllers/sheets_controller.rb:105:3: C: Method has too many lines. [12/10]
  def create
  ^^^
app/controllers/sheets_controller.rb:116:81: C: Line is too long. [107/80]
        format.json { render json: @sheet.errors.full_messages.to_sentence, status: :unprocessable_entity }
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:123:3: C: Assignment Branch Condition size for update is too high. [21.05/15]
  def update
  ^^^
app/controllers/sheets_controller.rb:123:3: C: Method has too many lines. [12/10]
  def update
  ^^^
app/controllers/sheets_controller.rb:125:23: C: Missing space after #.
    @sheet.slug = nil #Regenerate friendly-id
                      ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:134:81: C: Line is too long. [107/80]
        format.json { render json: @sheet.errors.full_messages.to_sentence, status: :unprocessable_entity }
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:144:81: C: Line is too long. [84/80]
      format.html { redirect_to sheets_path, notice: SUCCESS_DESTROY_SHEET_MESSAGE }
                                                                                ^^^^
app/controllers/sheets_controller.rb:151:27: C: Use the new Ruby 1.9 hash syntax.
    Sheet.restore(@sheet, :recursive => true)
                          ^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:153:81: C: Line is too long. [91/80]
      format.html { redirect_to sheet_path(@sheet), notice: SUCCESS_RESTORE_SHEET_MESSAGE }
                                                                                ^^^^^^^^^^^
app/controllers/sheets_controller.rb:160:3: C: Use 2 (not 4) spaces for indentation.
      @instruments = Sheet.values_for_instruments
  ^^^^
app/controllers/sheets_controller.rb:165:3: C: Use 2 (not 4) spaces for indentation.
      @sheets = Sheet.with_exact_instruments(params[:slug]).page(params[:page])
  ^^^^
app/controllers/sheets_controller.rb:175:58: C: Use the new Ruby 1.9 hash syntax.
    @sheets = Sheet.is_public.tagged_with(params[:slug], :on => :genres).includes(:user).page(params[:page])
                                                         ^^^^^^
app/controllers/sheets_controller.rb:175:81: C: Line is too long. [108/80]
    @sheets = Sheet.is_public.tagged_with(params[:slug], :on => :genres).includes(:user).page(params[:page])
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:185:58: C: Use the new Ruby 1.9 hash syntax.
    @sheets = Sheet.is_public.tagged_with(params[:slug], :on => :composers).includes(:user).page(params[:page])
                                                         ^^^^^^
app/controllers/sheets_controller.rb:185:81: C: Line is too long. [111/80]
    @sheets = Sheet.is_public.tagged_with(params[:slug], :on => :composers).includes(:user).page(params[:page])
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:195:58: C: Use the new Ruby 1.9 hash syntax.
    @sheets = Sheet.is_public.tagged_with(params[:slug], :on => :sources).includes(:user).page(params[:page])
                                                         ^^^^^^
app/controllers/sheets_controller.rb:195:81: C: Line is too long. [109/80]
    @sheets = Sheet.is_public.tagged_with(params[:slug], :on => :sources).includes(:user).page(params[:page])
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:199:71: C: Space missing to the left of {.
    render json: Sheet.is_public.search(params[:query], limit: 10).map{|s| {title: s.title, url: sheet_path(s)}}
                                                                      ^
app/controllers/sheets_controller.rb:199:71: C: Space between { and | missing.
    render json: Sheet.is_public.search(params[:query], limit: 10).map{|s| {title: s.title, url: sheet_path(s)}}
                                                                      ^^
app/controllers/sheets_controller.rb:199:76: C: Space inside { missing.
    render json: Sheet.is_public.search(params[:query], limit: 10).map{|s| {title: s.title, url: sheet_path(s)}}
                                                                           ^
app/controllers/sheets_controller.rb:199:81: C: Line is too long. [112/80]
    render json: Sheet.is_public.search(params[:query], limit: 10).map{|s| {title: s.title, url: sheet_path(s)}}
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:199:111: C: Space inside } missing.
    render json: Sheet.is_public.search(params[:query], limit: 10).map{|s| {title: s.title, url: sheet_path(s)}}
                                                                                                              ^
app/controllers/sheets_controller.rb:199:112: C: Space missing inside }.
    render json: Sheet.is_public.search(params[:query], limit: 10).map{|s| {title: s.title, url: sheet_path(s)}}
                                                                                                               ^
app/controllers/sheets_controller.rb:202:3: C: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/sheets_controller.rb:203:5: C: Assignment Branch Condition size for build_tags is too high. [16.03/15]
    def build_tags(sheet_params)
    ^^^
app/controllers/sheets_controller.rb:203:5: C: Inconsistent indentation detected.
    def build_tags(sheet_params)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:209:7: C: Redundant return detected.
      return updated_params
      ^^^^^^
app/controllers/sheets_controller.rb:212:5: C: Inconsistent indentation detected.
    def hide_private_sheets
    ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:213:7: C: Use a guard clause instead of wrapping the code inside a conditional expression.
      if @sheet.privately_visible? && current_user != @sheet.user
      ^^
app/controllers/sheets_controller.rb:219:5: C: Inconsistent indentation detected.
    def authenticate_owner
    ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:220:7: C: Use a guard clause instead of wrapping the code inside a conditional expression.
      unless @sheet.user == current_user
      ^^^^^^
app/controllers/sheets_controller.rb:226:5: C: Inconsistent indentation detected.
    def validate_flagged
    ^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:227:7: C: Use a guard clause instead of wrapping the code inside a conditional expression.
      if @sheet.is_flagged
      ^^
app/controllers/sheets_controller.rb:233:5: C: Inconsistent indentation detected.
    def format_tag_fields
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:234:59: C: Space missing inside }.
      TAG_FIELDS.each { |tag_field| format_tags(tag_field)} # Clean up selectize tag values: genres, sources, composers, instruments
                                                          ^
app/controllers/sheets_controller.rb:234:81: C: Line is too long. [132/80]
      TAG_FIELDS.each { |tag_field| format_tags(tag_field)} # Clean up selectize tag values: genres, sources, composers, instruments
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:237:5: C: Inconsistent indentation detected.
    def validate_instruments
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:238:49: C: Space between { and | missing.
      params[:sheet][:instruments_list].select! {|instrument| Sheet.values_for_instruments.include?(instrument)} # Delete invalid instruments
                                                ^^
app/controllers/sheets_controller.rb:238:81: C: Line is too long. [141/80]
      params[:sheet][:instruments_list].select! {|instrument| Sheet.values_for_instruments.include?(instrument)} # Delete invalid instruments
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:238:112: C: Space missing inside }.
      params[:sheet][:instruments_list].select! {|instrument| Sheet.values_for_instruments.include?(instrument)} # Delete invalid instruments
                                                                                                               ^
app/controllers/sheets_controller.rb:241:5: C: Inconsistent indentation detected.
    def set_sheet
    ^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:242:81: C: Line is too long. [87/80]
      @sheet = Sheet.includes(:sources, :composers, :genres).friendly.find(params[:id])
                                                                                ^^^^^^^
app/controllers/sheets_controller.rb:245:5: C: Inconsistent indentation detected.
    def set_sheet_lazy
    ^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:249:5: C: Inconsistent indentation detected.
    def set_deleted_sheet
    ^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:253:5: C: Inconsistent indentation detected.
    def set_all_tags
    ^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:259:5: C: Inconsistent indentation detected.
    def set_instruments
    ^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:263:5: C: Inconsistent indentation detected.
    def format_tags(tag_list)
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:264:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      params[:sheet][tag_list].delete("")
                                      ^^
app/controllers/sheets_controller.rb:265:63: W: Ambiguous block operator. Parenthesize the method arguments if it's surely a block operator, or add a whitespace to the right of the & if it should be a binary AND.
      params[:sheet][tag_list] = params[:sheet][tag_list].map &:to_sym
                                                              ^
app/controllers/sheets_controller.rb:268:5: C: Inconsistent indentation detected.
    def sheet_params
    ^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:269:81: C: Line is too long. [198/80]
      params[:sheet].permit(:user_id, :title, :description, :instruments_list, :composer_list, :genre_list, :source_list,:pages, :difficulty, :pdf, :assets_attributes, :visibility, :price, :license)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/sheets_controller.rb:269:121: C: Space missing after comma.
      params[:sheet].permit(:user_id, :title, :description, :instruments_list, :composer_list, :genre_list, :source_list,:pages, :difficulty, :pdf, :assets_attributes, :visibility, :price, :license)
                                                                                                                        ^
app/controllers/sheets_controller.rb:271:1: C: Extra empty line detected at class body end.
app/controllers/users/omniauth_callbacks_controller.rb:1:1: C: Missing top-level class documentation comment.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:1:7: C: Use nested module/class definitions instead of compact style.
class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:2:3: C: Assignment Branch Condition size for google_oauth2 is too high. [22.23/15]
  def google_oauth2
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:3:3: C: Use 2 (not 4) spaces for indentation.
      @user = User.from_omniauth(request.env["omniauth.auth"])
  ^^^^
app/controllers/users/omniauth_callbacks_controller.rb:3:46: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @user = User.from_omniauth(request.env["omniauth.auth"])
                                             ^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:6:37: C: Use the new Ruby 1.9 hash syntax.
        sign_in_and_redirect @user, :event => :authentication
                                    ^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:7:46: C: Use the new Ruby 1.9 hash syntax.
        set_flash_message(:notice, :success, :kind => "Google") if is_navigational_format?
                                             ^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:7:55: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        set_flash_message(:notice, :success, :kind => "Google") if is_navigational_format?
                                                      ^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:7:81: C: Line is too long. [90/80]
        set_flash_message(:notice, :success, :kind => "Google") if is_navigational_format?
                                                                                ^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:9:17: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        session["devise.google_data"] = request.env["omniauth.auth"]
                ^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:9:53: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        session["devise.google_data"] = request.env["omniauth.auth"]
                                                    ^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:10:47: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        flash[:error] = @user.errors.empty? ? "Error" : @user.errors.full_messages.to_sentence
                                              ^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:10:81: C: Line is too long. [94/80]
        flash[:error] = @user.errors.empty? ? "Error" : @user.errors.full_messages.to_sentence
                                                                                ^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:15:3: C: Assignment Branch Condition size for facebook is too high. [22.23/15]
  def facebook
  ^^^
app/controllers/users/omniauth_callbacks_controller.rb:16:44: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @user = User.from_omniauth(request.env["omniauth.auth"])
                                           ^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:19:35: C: Use the new Ruby 1.9 hash syntax.
      sign_in_and_redirect @user, :event => :authentication #this will throw if @user is not activated
                                  ^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:19:61: C: Missing space after #.
      sign_in_and_redirect @user, :event => :authentication #this will throw if @user is not activated
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:19:81: C: Line is too long. [102/80]
      sign_in_and_redirect @user, :event => :authentication #this will throw if @user is not activated
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:20:44: C: Use the new Ruby 1.9 hash syntax.
      set_flash_message(:notice, :success, :kind => "Facebook") if is_navigational_format?
                                           ^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:20:53: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      set_flash_message(:notice, :success, :kind => "Facebook") if is_navigational_format?
                                                    ^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:20:81: C: Line is too long. [90/80]
      set_flash_message(:notice, :success, :kind => "Facebook") if is_navigational_format?
                                                                                ^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:22:15: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      session["devise.facebook_data"] = request.env["omniauth.auth"]
              ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:22:53: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      session["devise.facebook_data"] = request.env["omniauth.auth"]
                                                    ^^^^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:23:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:error] = @user.errors.empty? ? "Error" : @user.errors.full_messages.to_sentence
                                            ^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:23:81: C: Line is too long. [92/80]
      flash[:error] = @user.errors.empty? ? "Error" : @user.errors.full_messages.to_sentence
                                                                                ^^^^^^^^^^^^
app/controllers/users/omniauth_callbacks_controller.rb:27:4: C: Final newline missing.
end

app/controllers/users/registrations_controller.rb:1:1: C: Missing top-level class documentation comment.
class Users::RegistrationsController < Devise::RegistrationsController
^^^^^
app/controllers/users/registrations_controller.rb:1:7: C: Use nested module/class definitions instead of compact style.
class Users::RegistrationsController < Devise::RegistrationsController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:2:81: C: Line is too long. [84/80]
  SUCCESS_UPDATE_PROFILE_MESSAGE = "Nice! You've successfully updated your profile."
                                                                                ^^^^
app/controllers/users/registrations_controller.rb:5:28: C: Use the new Ruby 1.9 hash syntax.
  before_action :set_user, :only => [:profile, :favorites, :sheets]
                           ^^^^^^^^
app/controllers/users/registrations_controller.rb:7:42: C: Use the new Ruby 1.9 hash syntax.
  before_action :validate_has_published, :only => [:sales]
                                         ^^^^^^^^
app/controllers/users/registrations_controller.rb:8:38: C: Use the new Ruby 1.9 hash syntax.
  before_action :authenticate_user!, :only => [:purchases, :sales, :trash, :private_music]
                                     ^^^^^^^^
app/controllers/users/registrations_controller.rb:8:81: C: Line is too long. [90/80]
  before_action :authenticate_user!, :only => [:purchases, :sales, :trash, :private_music]
                                                                                ^^^^^^^^^^
app/controllers/users/registrations_controller.rb:13:7: C: Provide an exception class and message as arguments to raise.
      raise ActionController::RoutingError.new('User Not Found')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:13:7: C: Use fail instead of raise to signal exceptions.
      raise ActionController::RoutingError.new('User Not Found')
      ^^^^^
app/controllers/users/registrations_controller.rb:37:3: C: Use 2 (not 3) spaces for indentation.
     @deleted_sheets = current_user.deleted_sheets
  ^^^
app/controllers/users/registrations_controller.rb:45:3: C: Assignment Branch Condition size for update is too high. [20.2/15]
  def update
  ^^^
app/controllers/users/registrations_controller.rb:45:3: C: Method has too many lines. [14/10]
  def update
  ^^^
app/controllers/users/registrations_controller.rb:50:36: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      account_update_params.delete("password")
                                   ^^^^^^^^^^
app/controllers/users/registrations_controller.rb:51:36: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      account_update_params.delete("password_confirmation")
                                   ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:57:22: C: Use the new Ruby 1.9 hash syntax.
      sign_in @user, :bypass => true
                     ^^^^^^^^^^
app/controllers/users/registrations_controller.rb:61:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      render "edit"
             ^^^^^^
app/controllers/users/registrations_controller.rb:66:3: C: Assignment Branch Condition size for finish_registration is too high. [23.37/15]
  def finish_registration
  ^^^
app/controllers/users/registrations_controller.rb:66:3: C: Method has too many lines. [11/10]
  def finish_registration
  ^^^
app/controllers/users/registrations_controller.rb:67:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if request.patch? && params[:user] && params[:user][:username]
    ^^
app/controllers/users/registrations_controller.rb:71:81: C: Line is too long. [100/80]
        redirect_to user_profile_path(current_user.username), notice: SUCCESS_UPDATE_PROFILE_MESSAGE
                                                                                ^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:74:81: C: Line is too long. [83/80]
        redirect_to finish_registration_path, error: FAILURE_UPDATE_PROFILE_MESSAGE
                                                                                ^^^
app/controllers/users/registrations_controller.rb:83:5: C: Do not write to stdout. Use Rails' logger if you want to log.
    p "Accounts cannot be deleted"
    ^
app/controllers/users/registrations_controller.rb:83:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    p "Accounts cannot be deleted"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:86:3: C: Keep a blank line before and after protected.
  protected
  ^^^^^^^^^
app/controllers/users/registrations_controller.rb:87:5: C: Inconsistent indentation detected.
    def set_user
    ^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:88:28: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @user = User.find_by("username = ?", params[:username])
                           ^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:91:5: C: Inconsistent indentation detected.
    def registration_params
    ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:92:81: C: Line is too long. [139/80]
      params[:user].permit(:username, :finished_registration?, :tagline, :website, :avatar, :terms, :paypal_email, :first_name, :last_name)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:95:5: C: Inconsistent indentation detected.
    def validate_registration_finished
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:96:7: C: Use a guard clause instead of wrapping the code inside a conditional expression.
      if params[:action] == "finish_registration" && (!current_user || current_user.finished_registration?)
      ^^
app/controllers/users/registrations_controller.rb:96:29: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if params[:action] == "finish_registration" && (!current_user || current_user.finished_registration?)
                            ^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:96:81: C: Line is too long. [107/80]
      if params[:action] == "finish_registration" && (!current_user || current_user.finished_registration?)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:101:5: C: Inconsistent indentation detected.
    def validate_has_published
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:102:38: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      redirect_to root_path, notice: "Sales is only available when you have a published sheet." unless current_user.has_published
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:102:81: C: Line is too long. [129/80]
      redirect_to root_path, notice: "Sales is only available when you have a published sheet." unless current_user.has_published
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/registrations_controller.rb:104:4: C: Final newline missing.
end

app/helpers/application_helper.rb:1:1: C: Missing top-level module documentation comment.
module ApplicationHelper
^^^^^^
app/helpers/application_helper.rb:2:1: C: Extra empty line detected at module body beginning.
app/helpers/application_helper.rb:8:3: C: Method has too many lines. [11/10]
  def tag_path(tag)
  ^^^
app/helpers/application_helper.rb:11:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    when "genres"
         ^^^^^^^^
app/helpers/application_helper.rb:13:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    when "composers"
         ^^^^^^^^^^^
app/helpers/application_helper.rb:15:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    when "sources"
         ^^^^^^^^^
app/helpers/application_helper.rb:18:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "/404"
      ^^^^^^
app/helpers/application_helper.rb:22:3: C: Method has too many lines. [11/10]
  def tag_icon(tag)
  ^^^
app/helpers/application_helper.rb:25:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    when "genres"
         ^^^^^^^^
app/helpers/application_helper.rb:26:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "headphones"
      ^^^^^^^^^^^^
app/helpers/application_helper.rb:27:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    when "composers"
         ^^^^^^^^^^^
app/helpers/application_helper.rb:28:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "users"
      ^^^^^^^
app/helpers/application_helper.rb:29:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    when "sources"
         ^^^^^^^^^
app/helpers/application_helper.rb:30:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "book"
      ^^^^^^
app/helpers/application_helper.rb:32:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "magic"
      ^^^^^^^
app/helpers/application_helper.rb:37:43: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    content_for :title, page_title.to_s + " | " if page_title
                                          ^^^^^
app/helpers/application_helper.rb:40:3: C: Method has too many lines. [12/10]
  def bootstrap_class_for flash_type
  ^^^
app/helpers/application_helper.rb:40:27: C: Use def with parentheses when there are parameters.
  def bootstrap_class_for flash_type
                          ^^^^^^^^^^
app/helpers/application_helper.rb:42:7: C: Indent when as deep as case.
      when :success
      ^^^^
app/helpers/application_helper.rb:43:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "alert-success"
        ^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:44:7: C: Indent when as deep as case.
      when :error
      ^^^^
app/helpers/application_helper.rb:45:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "alert-error"
        ^^^^^^^^^^^^^
app/helpers/application_helper.rb:46:7: C: Indent when as deep as case.
      when :alert
      ^^^^
app/helpers/application_helper.rb:47:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "alert-info"
        ^^^^^^^^^^^^
app/helpers/application_helper.rb:48:7: C: Indent when as deep as case.
      when :notice
      ^^^^
app/helpers/application_helper.rb:49:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "alert-info"
        ^^^^^^^^^^^^
app/helpers/application_helper.rb:55:16: C: Use def with parentheses when there are parameters.
  def icon_for flash_type
               ^^^^^^^^^^
app/helpers/application_helper.rb:57:7: C: Indent when as deep as case.
      when :success
      ^^^^
app/helpers/application_helper.rb:58:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "check"
        ^^^^^^^
app/helpers/application_helper.rb:59:7: C: Indent when as deep as case.
      when :error
      ^^^^
app/helpers/application_helper.rb:60:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "remove"
        ^^^^^^^^
app/helpers/application_helper.rb:61:7: C: Indent when as deep as case.
      when :alert
      ^^^^
app/helpers/application_helper.rb:62:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "warning"
        ^^^^^^^^^
app/helpers/application_helper.rb:64:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "check"
        ^^^^^^^
app/helpers/application_helper.rb:67:1: C: Extra empty line detected at module body end.
app/models/admin_user.rb:1:1: C: Missing top-level class documentation comment.
class AdminUser < ActiveRecord::Base
^^^^^
app/models/asset.rb:1:1: C: Missing top-level class documentation comment.
class Asset < ActiveRecord::Base
^^^^^
app/models/asset.rb:2:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ASSET_HASH_SECRET = "sheethubhashsecret"
                      ^^^^^^^^^^^^^^^^^^^^
app/models/asset.rb:6:37: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  ASSET_NUMBER_VALIDATION_MESSAGE = "You can only have 5 additional files per sheet"
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/asset.rb:6:81: C: Line is too long. [84/80]
  ASSET_NUMBER_VALIDATION_MESSAGE = "You can only have 5 additional files per sheet"
                                                                                ^^^^
app/models/asset.rb:7:30: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  INVALID_FILESIZE_MESSAGE = "Files must be less than 20 Megabytes in size"
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/asset.rb:12:3: C: Prefer the new style validations validates :column, presence: value over validates_presence_of.
  validates_presence_of :sheet
  ^^^^^^^^^^^^^^^^^^^^^
app/models/asset.rb:15:21: C: Use the new Ruby 1.9 hash syntax.
                    :hash_secret => ASSET_HASH_SECRET, #TODO: Use ENV for this
                    ^^^^^^^^^^^^^^^
app/models/asset.rb:15:56: C: Missing space after #.
                    :hash_secret => ASSET_HASH_SECRET, #TODO: Use ENV for this
                                                       ^^^^^^^^^^^^^^^^^^^^^^^
app/models/asset.rb:16:21: C: Use the new Ruby 1.9 hash syntax.
                    :preserve_files => "true"
                    ^^^^^^^^^^^^^^^^^^
app/models/asset.rb:16:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    :preserve_files => "true"
                                       ^^^^^^
app/models/asset.rb:25:5: C: Redundant return detected.
    return url.sub(S3DirectUpload.config.url, '')
    ^^^^^^
app/models/asset.rb:31:5: W: Useless assignment to variable - s3_object.
    s3_object = bucket.objects[s3_key]
    ^^^^^^^^^
app/models/asset.rb:34:44: W: Unused method argument - style_name. If it's necessary, use _ or _style_name as an argument name to indicate that it won't be used.
  def expiring_url(time = EXPIRATION_TIME, style_name = :original)
                                           ^^^^^^^^^^
app/models/asset.rb:35:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if s3_object
    ^^
app/models/asset.rb:35:5: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if s3_object
    ^^
app/models/asset.rb:36:32: C: Use the new Ruby 1.9 hash syntax.
      s3_object.url_for(:read, :expires => time).to_s
                               ^^^^^^^^^^^
app/models/asset.rb:44:3: C: Keep a blank line before and after private.
  private
  ^^^^^^^
app/models/asset.rb:45:5: C: Inconsistent indentation detected.
    def validate_number_of_assets
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/asset.rb:48:81: C: Line is too long. [90/80]
      errors.add(:sheet_id, ASSET_NUMBER_VALIDATION_MESSAGE) unless valid_number_of_assets
                                                                                ^^^^^^^^^^
app/models/asset.rb:51:5: C: Inconsistent indentation detected.
    def validate_file_size
    ^^^^^^^^^^^^^^^^^^^^^^
app/models/asset.rb:55:1: C: Extra empty line detected at class body end.
app/models/flag.rb:1:1: C: Missing top-level class documentation comment.
class Flag < ActiveRecord::Base
^^^^^
app/models/flag.rb:4:1: C: Extra empty line detected at class body end.
app/models/order.rb:1:1: C: Missing top-level class documentation comment.
class Order < ActiveRecord::Base
^^^^^
app/models/order.rb:3:24: C: Align the elements of a hash literal if they span more than one line.
                       message: "Users cannot have multiple orders of the same Sheet." }
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/order.rb:3:33: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                       message: "Users cannot have multiple orders of the same Sheet." }
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/order.rb:3:81: C: Line is too long. [88/80]
                       message: "Users cannot have multiple orders of the same Sheet." }
                                                                                ^^^^^^^^
app/models/order.rb:11:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if !completed?
    ^^
app/models/order.rb:11:5: C: Favor unless over if for negative conditions.
    if !completed?
    ^^^^^^^^^^^^^^
app/models/order.rb:12:7: C: Redundant self detected.
      self.update(status: Order.statuses[:completed], purchased_at: Time.now)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/order.rb:18:32: W: Unused method argument - order. If it's necessary, use _ or _order as an argument name to indicate that it won't be used. You can also write as send_sold_email_to_owner(*) if you want the method to accept any arguments but don't care about them.
  def send_sold_email_to_owner(order)
                               ^^^^^
app/models/order.rb:25:56: C: Do not use parentheses for method calls with no arguments.
    payment_details_request = api.build_payment_details()
                                                       ^
app/models/order.rb:31:7: C: Use fail instead of raise to signal exceptions.
      raise "Payment Details for payKey #{payKey} Not Found"
      ^^^^^
app/models/order.rb:34:1: C: Extra empty line detected at class body end.
app/models/sheet.rb:1:1: C: Class definition is too long. [193/100]
class Sheet < ActiveRecord::Base
^^^^^
app/models/sheet.rb:1:1: C: Missing top-level class documentation comment.
class Sheet < ActiveRecord::Base
^^^^^
app/models/sheet.rb:2:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  SHEET_HASH_SECRET = "sheethubhashsecret"
                      ^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:3:21: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  PDF_DEFAULT_URL = "nil"
                    ^^^^^
app/models/sheet.rb:4:30: C: Missing space after #.
  DEFAULT_PHASH_TRESHOLD = 5 #TODO: test out for ideal value
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:6:36: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  PRICE_VALUE_VALIDATION_MESSAGE = "Price must be either $0 or between $0.99 - $999.99"
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:6:81: C: Line is too long. [87/80]
  PRICE_VALUE_VALIDATION_MESSAGE = "Price must be either $0 or between $0.99 - $999.99"
                                                                                ^^^^^^^
app/models/sheet.rb:8:15: C: Separate every 3 digits in the integer portion of a number with underscores(_).
  MAX_PRICE = 99999
              ^^^^^
app/models/sheet.rb:9:28: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  INVALID_ASSETS_MESSAGE = "Sheet supporting files invalid"
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:10:27: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  TOO_MANY_TAGS_MESSAGE = "You have too many tags. Each sheet can have up to 5 of each: genres, composers, sources."
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:10:81: C: Line is too long. [116/80]
  TOO_MANY_TAGS_MESSAGE = "You have too many tags. Each sheet can have up to 5 of each: genres, composers, sources."
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:24:28: C: Use the new Ruby 1.9 hash syntax.
  friendly_id :sheet_slug, :use => :slugged
                           ^^^^^^^
app/models/sheet.rb:28:20: C: Use the new Ruby 1.9 hash syntax.
  has_many :flags, :dependent => :destroy
                   ^^^^^^^^^^^^^
app/models/sheet.rb:33:64: C: Space missing inside }.
  scope :best_sellers, -> { is_public.order(price_cents: :desc)}
                                                               ^
app/models/sheet.rb:36:20: C: %w-literals should be delimited by ( and )
  enum visibility: %w{ vpublic vprivate}
                   ^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:37:20: C: %w-literals should be delimited by ( and )
  enum difficulty: %w{ beginner intermediate advanced}
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:38:17: C: %w-literals should be delimited by ( and )
  enum license: %w{all_rights_reserved creative_commons cc0 public_domain}
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:39:25: C: Use the new Ruby 1.9 hash syntax.
  bitmask :instruments, :as => [:guitar, :piano, :bass, :mandolin, :banjo, :ukulele, :violin, :flute, :harmonica, :trombone, :trumpet, :clarinet, :saxophone, :others], :null => false
                        ^^^^^^
app/models/sheet.rb:39:81: C: Line is too long. [182/80]
  bitmask :instruments, :as => [:guitar, :piano, :bass, :mandolin, :banjo, :ukulele, :violin, :flute, :harmonica, :trombone, :trumpet, :clarinet, :saxophone, :others], :null => false
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:39:169: C: Use the new Ruby 1.9 hash syntax.
  bitmask :instruments, :as => [:guitar, :piano, :bass, :mandolin, :banjo, :ukulele, :violin, :flute, :harmonica, :trombone, :trumpet, :clarinet, :saxophone, :others], :null => false
                                                                                                                                                                        ^^^^^^^^
app/models/sheet.rb:45:21: C: Use the new Ruby 1.9 hash syntax.
                    :styles => {
                    ^^^^^^^^^^
app/models/sheet.rb:47:23: C: Use the new Ruby 1.9 hash syntax.
                      :preview => {:geometry => "", :format => :png}
                      ^^^^^^^^^^^
app/models/sheet.rb:47:35: C: Space inside { missing.
                      :preview => {:geometry => "", :format => :png}
                                  ^
app/models/sheet.rb:47:36: C: Use the new Ruby 1.9 hash syntax.
                      :preview => {:geometry => "", :format => :png}
                                   ^^^^^^^^^^^^
app/models/sheet.rb:47:49: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                      :preview => {:geometry => "", :format => :png}
                                                ^^
app/models/sheet.rb:47:53: C: Use the new Ruby 1.9 hash syntax.
                      :preview => {:geometry => "", :format => :png}
                                                    ^^^^^^^^^^
app/models/sheet.rb:47:68: C: Space inside } missing.
                      :preview => {:geometry => "", :format => :png}
                                                                   ^
app/models/sheet.rb:49:21: C: Use the new Ruby 1.9 hash syntax.
                    :processors => [:preview], # :watermark currently disabled
                    ^^^^^^^^^^^^^^
app/models/sheet.rb:50:21: C: Use the new Ruby 1.9 hash syntax.
                    :hash_secret => SHEET_HASH_SECRET, #TODO: Use ENV for this
                    ^^^^^^^^^^^^^^^
app/models/sheet.rb:50:56: C: Missing space after #.
                    :hash_secret => SHEET_HASH_SECRET, #TODO: Use ENV for this
                                                       ^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:51:21: C: Use the new Ruby 1.9 hash syntax.
                    :default_url => PDF_DEFAULT_URL, #TODO: point to special Missing file route
                    ^^^^^^^^^^^^^^^
app/models/sheet.rb:51:54: C: Missing space after #.
                    :default_url => PDF_DEFAULT_URL, #TODO: point to special Missing file route
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:51:81: C: Line is too long. [95/80]
                    :default_url => PDF_DEFAULT_URL, #TODO: point to special Missing file route
                                                                                ^^^^^^^^^^^^^^^
app/models/sheet.rb:52:21: C: Use the new Ruby 1.9 hash syntax.
                    :preserve_files => "true"
                    ^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:52:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    :preserve_files => "true"
                                       ^^^^^^
app/models/sheet.rb:54:7: C: Align the parameters of a method call if they span more than one line.
      :content_type => [ 'application/pdf' ]
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:54:7: C: Use the new Ruby 1.9 hash syntax.
      :content_type => [ 'application/pdf' ]
      ^^^^^^^^^^^^^^^^
app/models/sheet.rb:54:25: C: Space inside square brackets detected.
      :content_type => [ 'application/pdf' ]
                        ^
app/models/sheet.rb:54:43: C: Space inside square brackets detected.
      :content_type => [ 'application/pdf' ]
                                          ^
app/models/sheet.rb:55:35: C: Use the new Ruby 1.9 hash syntax.
  validates_attachment_size :pdf, :in => 0.megabytes..MAX_FILESIZE.megabytes
                                  ^^^^^^
app/models/sheet.rb:58:21: C: Use the new Ruby 1.9 hash syntax.
  has_many :assets, :dependent => :destroy
                    ^^^^^^^^^^^^^
app/models/sheet.rb:61:5: C: Align the parameters of a method call if they span more than one line.
    :on => [:create, :update],
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:61:5: C: Use the new Ruby 1.9 hash syntax.
    :on => [:create, :update],
    ^^^^^^
app/models/sheet.rb:62:5: C: Use the new Ruby 1.9 hash syntax.
    :message => INVALID_ASSETS_MESSAGE
    ^^^^^^^^^^^
app/models/sheet.rb:65:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return "All rights reserved" if all_rights_reserved?
           ^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:66:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return "Creative Commons" if creative_commons?
           ^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:67:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return "Creative Commons Zero" if cc0?
           ^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:68:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return "Public Domain" if public_domain?
           ^^^^^^^^^^^^^^^
app/models/sheet.rb:73:5: C: Redundant return detected.
    return user.purchased?(id)
    ^^^^^^
app/models/sheet.rb:82:5: C: Redundant return detected.
    return vpublic?
    ^^^^^^
app/models/sheet.rb:86:5: C: Redundant return detected.
    return vprivate?
    ^^^^^^
app/models/sheet.rb:102:5: C: Redundant return detected.
    return price_cents.to_f / 100
    ^^^^^^
app/models/sheet.rb:106:5: C: Prefer self[:attr] = val over write_attribute(:attr, var).
    write_attribute :price_cents, (val.to_f * 100).to_i
    ^^^^^^^^^^^^^^^
app/models/sheet.rb:110:5: C: Redundant return detected.
    return (USER_ROYALTY_PERCENTAGE * price).round(2)
    ^^^^^^
app/models/sheet.rb:114:5: C: Redundant return detected.
    return (USER_ROYALTY_PERCENTAGE * price_cents).round(0)
    ^^^^^^
app/models/sheet.rb:118:5: C: Redundant return detected.
    return ((1 - USER_ROYALTY_PERCENTAGE) * price).round(2)
    ^^^^^^
app/models/sheet.rb:122:5: C: Redundant return detected.
    return ((1 - USER_ROYALTY_PERCENTAGE) * price_cents).round(0)
    ^^^^^^
app/models/sheet.rb:125:7: C: Rename is_free? to free?.
  def is_free?
      ^^^^^^^^
app/models/sheet.rb:126:5: C: Redundant return detected.
    return price_cents == 0
    ^^^^^^
app/models/sheet.rb:137:33: C: Surrounding space missing in default value assignment.
  def duplicate?(sheet, treshold=DEFAULT_PHASH_TRESHOLD)
                                ^
app/models/sheet.rb:138:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if (pdf.present? && sheet.pdf.present?)
    ^^
app/models/sheet.rb:138:8: C: Don't use parentheses around the condition of an if.
    if (pdf.present? && sheet.pdf.present?)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:141:38: C: Space missing after colon.
      this.duplicate?(other, treshold:treshold)
                                     ^
app/models/sheet.rb:146:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if (pdf.present? && sheet.pdf.present?)
    ^^
app/models/sheet.rb:146:8: C: Don't use parentheses around the condition of an if.
    if (pdf.present? && sheet.pdf.present?)
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:159:7: C: Rename has_pdf_preview? to pdf_preview?.
  def has_pdf_preview?
      ^^^^^^^^^^^^^^^^
app/models/sheet.rb:172:81: C: Line is too long. [103/80]
  # TODO: currently related_sheets is limited to 3 results for performance, refactor with ElasticSearch
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:173:3: C: Method has too many lines. [13/10]
  def related_sheets
  ^^^
app/models/sheet.rb:190:53: C: Use the new Ruby 1.9 hash syntax.
    related_sheets = Sheet.tagged_with(joined_tags, :any => true).includes(:sources, :composers, :genres).limit(5)
                                                    ^^^^^^^
app/models/sheet.rb:190:81: C: Line is too long. [114/80]
    related_sheets = Sheet.tagged_with(joined_tags, :any => true).includes(:sources, :composers, :genres).limit(5)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:192:24: C: Space missing to the left of {.
    related_sheets.each{ |sheet| related_tags.merge sheet.tag_objects }
                       ^
app/models/sheet.rb:197:81: C: Line is too long. [115/80]
    (instruments & Sheet.values_for_instruments).map { |r| 2**Sheet.values_for_instruments.index(r) }.inject(0, :+)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:204:3: C: Keep a blank line before and after protected.
  protected
  ^^^^^^^^^
app/models/sheet.rb:205:5: C: Inconsistent indentation detected.
    def soft_destroy_callback
    ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:209:5: C: Inconsistent indentation detected.
    def tags
    ^^^^^^^^
app/models/sheet.rb:213:5: C: Inconsistent indentation detected.
    def tag_objects
    ^^^^^^^^^^^^^^^
app/models/sheet.rb:218:5: C: Inconsistent indentation detected.
    def format_tags(input)
    ^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:219:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      output = ""
               ^^
app/models/sheet.rb:223:7: C: Redundant return detected.
      return output[0..-2] # Strip trailing comma
      ^^^^^^
app/models/sheet.rb:226:5: C: Inconsistent indentation detected.
    def validate_price
    ^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:228:81: C: Line is too long. [81/80]
      errors.add(:price_cents, PRICE_VALUE_VALIDATION_MESSAGE) unless valid_price
                                                                                ^
app/models/sheet.rb:231:5: C: Inconsistent indentation detected.
    def validate_number_of_tags
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:232:81: C: Line is too long. [144/80]
      valid_number = genre_list.size <= MAX_NUMBER_OF_TAGS && source_list.size <= MAX_NUMBER_OF_TAGS && composer_list.size <= MAX_NUMBER_OF_TAGS
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:236:5: C: Inconsistent indentation detected.
    def record_publisher
    ^^^^^^^^^^^^^^^^^^^^
app/models/sheet.rb:239:4: C: Final newline missing.
end

app/models/user.rb:1:1: C: Class definition is too long. [118/100]
class User < ActiveRecord::Base
^^^^^
app/models/user.rb:1:1: C: Missing top-level class documentation comment.
class User < ActiveRecord::Base
^^^^^
app/models/user.rb:2:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  AVATAR_HASH_SECRET = "sheethubhashsecret"
                       ^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:3:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  MISSING_AVATAR_URL = "/images/default_avatar.png"
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:10:25: C: %w-literals should be delimited by ( and )
  enum membership_type: %w{ free premium }
                        ^^^^^^^^^^^^^^^^^^
app/models/user.rb:11:52: C: Space inside { missing.
  validates :username, presence: true, uniqueness: {case_sensitive: false}, if: :finished_registration?
                                                   ^
app/models/user.rb:11:74: C: Space inside } missing.
  validates :username, presence: true, uniqueness: {case_sensitive: false}, if: :finished_registration?
                                                                         ^
app/models/user.rb:11:81: C: Line is too long. [103/80]
  validates :username, presence: true, uniqueness: {case_sensitive: false}, if: :finished_registration?
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:12:3: C: Prefer the new style validations validates :column, acceptance: value over validates_acceptance_of.
  validates_acceptance_of :terms, acceptance: true
  ^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:14:81: C: Line is too long. [126/80]
  validates_email_format_of :paypal_email, message: 'You have an invalid paypal account email address', if: :has_paypal_email?
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:20:21: C: Use the new Ruby 1.9 hash syntax.
                    :convert_options => {
                    ^^^^^^^^^^^^^^^^^^^
app/models/user.rb:21:25: C: Use the new Ruby 1.9 hash syntax.
                        :original => "-strip"},
                        ^^^^^^^^^^^^
app/models/user.rb:21:25: C: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
                        :original => "-strip"},
                        ^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:21:38: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                        :original => "-strip"},
                                     ^^^^^^^^
app/models/user.rb:21:46: C: Space inside } missing.
                        :original => "-strip"},
                                             ^
app/models/user.rb:22:21: C: Use the new Ruby 1.9 hash syntax.
                    :hash_secret => AVATAR_HASH_SECRET,
                    ^^^^^^^^^^^^^^^
app/models/user.rb:23:21: C: Use the new Ruby 1.9 hash syntax.
                    :default_url => MISSING_AVATAR_URL
                    ^^^^^^^^^^^^^^^
app/models/user.rb:24:46: C: Use the new Ruby 1.9 hash syntax.
  validates_attachment_content_type :avatar, :content_type => /\Aimage\/.*\Z/
                                             ^^^^^^^^^^^^^^^^
app/models/user.rb:25:22: C: Use the new Ruby 1.9 hash syntax.
  validates :avatar, :dimensions => { width: AVATAR_MAX_WIDTH, height: AVATAR_MAX_HEIGHT }
                     ^^^^^^^^^^^^^^
app/models/user.rb:25:81: C: Line is too long. [90/80]
  validates :avatar, :dimensions => { width: AVATAR_MAX_WIDTH, height: AVATAR_MAX_HEIGHT }
                                                                                ^^^^^^^^^^
app/models/user.rb:31:25: C: Use the new Ruby 1.9 hash syntax.
  devise :omniauthable, :omniauth_providers => [:facebook, :google_oauth2]
                        ^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:34:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    created_at.strftime "%B %Y"
                        ^^^^^^^
app/models/user.rb:57:7: C: Rename has_paypal_email? to paypal_email?.
  def has_paypal_email?
      ^^^^^^^^^^^^^^^^^
app/models/user.rb:71:5: C: Redundant return detected.
    return result
    ^^^^^^
app/models/user.rb:79:5: C: Redundant return detected.
    return result
    ^^^^^^
app/models/user.rb:83:17: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    sales.where("purchased_at >= ?", 1.month.ago.utc)
                ^^^^^^^^^^^^^^^^^^^
app/models/user.rb:91:5: C: Redundant return detected.
    return result
    ^^^^^^
app/models/user.rb:116:3: C: Assignment Branch Condition size for from_omniauth is too high. [30.02/15]
  def self.from_omniauth(auth)
  ^^^
app/models/user.rb:116:3: C: Method has too many lines. [14/10]
  def self.from_omniauth(auth)
  ^^^
app/models/user.rb:119:46: C: Space missing after comma.
      user.password = Devise.friendly_token[0,20]
                                             ^
app/models/user.rb:126:27: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if auth.provider == "facebook"
                          ^^^^^^^^^^
app/models/user.rb:127:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        user.image = auth.info.image + "?type=normal"
                                       ^^^^^^^^^^^^^^
app/models/user.rb:135:3: C: Keep a blank line before and after private.
  private
  ^^^^^^^
app/models/user.rb:136:5: C: Inconsistent indentation detected.
    def validate_number_of_uploaded_sheets
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:137:27: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      errors.add(:sheets, "You have exceeded the number of sheets you can upload. Free users have 30, Premium can have up to 250. Upgrade your membership to continue publishing on SheetHub. ") if sheets.size > membership_sheet_quantity
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:137:81: C: Line is too long. [235/80]
      errors.add(:sheets, "You have exceeded the number of sheets you can upload. Free users have 30, Premium can have up to 250. Upgrade your membership to continue publishing on SheetHub. ") if sheets.size > membership_sheet_quantity
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:140:5: C: Inconsistent indentation detected.
    def membership_sheet_quantity
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/validators/dimensions_validator.rb:1:1: C: Missing top-level class documentation comment.
class DimensionsValidator < ActiveModel::EachValidator
^^^^^
app/validators/dimensions_validator.rb:2:3: C: Assignment Branch Condition size for validate_each is too high. [23.69/15]
  def validate_each(record, attribute, value)
  ^^^
app/validators/dimensions_validator.rb:3:5: C: Use a guard clause instead of wrapping the code inside a conditional expression.
    if record.send("#{attribute}?".to_sym) && value.queued_for_write[:original].present?
    ^^
app/validators/dimensions_validator.rb:3:81: C: Line is too long. [88/80]
    if record.send("#{attribute}?".to_sym) && value.queued_for_write[:original].present?
                                                                                ^^^^^^^^
app/validators/dimensions_validator.rb:9:81: C: Line is too long. [93/80]
      record.errors[attribute] << "Width must be #{width}px" unless dimensions.width <= width
                                                                                ^^^^^^^^^^^^^
app/validators/dimensions_validator.rb:10:81: C: Line is too long. [97/80]
      record.errors[attribute] << "Height must be #{height}px" unless dimensions.height <= height
                                                                                ^^^^^^^^^^^^^^^^^
app/validators/dimensions_validator.rb:13:4: C: Final newline missing.
end

bin/rails:3:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load File.expand_path("../spring", __FILE__)
                        ^^^^^^^^^^^
bin/rails:4:1: W: Do not suppress exceptions.
rescue LoadError
^^^^^^^^^^^^^^^^
bin/rake:3:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load File.expand_path("../spring", __FILE__)
                        ^^^^^^^^^^^
bin/rake:4:1: W: Do not suppress exceptions.
rescue LoadError
^^^^^^^^^^^^^^^^
bin/spring:7:11: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "rubygems"
          ^^^^^^^^^^
bin/spring:8:11: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "bundler"
          ^^^^^^^^^
bin/spring:10:12: W: Assignment in condition - you probably meant to use ==.
  if match = Bundler.default_lockfile.read.match(/^GEM$.*?^    spring \((.*?)\)$.*?^$/m)
           ^
bin/spring:10:81: C: Line is too long. [88/80]
  if match = Bundler.default_lockfile.read.match(/^GEM$.*?^    spring \((.*?)\)$.*?^$/m)
                                                                                ^^^^^^^^
bin/spring:11:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["GEM_PATH"] = ([Bundler.bundle_path.to_s] + Gem.path).join(File::PATH_SEPARATOR)
        ^^^^^^^^^^
bin/spring:11:81: C: Line is too long. [88/80]
    ENV["GEM_PATH"] = ([Bundler.bundle_path.to_s] + Gem.path).join(File::PATH_SEPARATOR)
                                                                                ^^^^^^^^
bin/spring:12:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["GEM_HOME"] = ""
        ^^^^^^^^^^
bin/spring:12:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["GEM_HOME"] = ""
                      ^^
bin/spring:15:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gem "spring", match[1]
        ^^^^^^^^
bin/spring:16:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    require "spring/binstub"
            ^^^^^^^^^^^^^^^^
config/application.rb:9:12: C: Redundant curly braces around a hash parameter.
AWS.config({
           ^
config/application.rb:10:3: C: Use the new Ruby 1.9 hash syntax.
  :access_key_id => 'AKIAI32VLLBYAJJ2THYA',
  ^^^^^^^^^^^^^^^^^
config/application.rb:10:3: C: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
  :access_key_id => 'AKIAI32VLLBYAJJ2THYA',
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:11:3: C: Use the new Ruby 1.9 hash syntax.
  :secret_access_key => 'STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9',
  ^^^^^^^^^^^^^^^^^^^^^
config/application.rb:12:3: C: Use the new Ruby 1.9 hash syntax.
  :region => 'ap-southeast-1'
  ^^^^^^^^^^
config/application.rb:13:1: C: Indent the right brace the same as the first position after the preceding left parenthesis.
})
^
config/application.rb:16:3: C: Missing top-level class documentation comment.
  class Application < Rails::Application
  ^^^^^
config/application.rb:17:1: C: Extra empty line detected at class body beginning.
config/environments/development.rb:2:81: C: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/environments/development.rb:8:5: C: Use the new Ruby 1.9 hash syntax.
    :storage => :s3,
    ^^^^^^^^^^^
config/environments/development.rb:9:5: C: Use the new Ruby 1.9 hash syntax.
    :s3_credentials => {
    ^^^^^^^^^^^^^^^^^^
config/environments/development.rb:10:7: C: Use the new Ruby 1.9 hash syntax.
      :bucket => "sheethub",
      ^^^^^^^^^^
config/environments/development.rb:10:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :bucket => "sheethub",
                 ^^^^^^^^^^
config/environments/development.rb:11:7: C: Use the new Ruby 1.9 hash syntax.
      :access_key_id => "AKIAI32VLLBYAJJ2THYA", #TODO: Use ENV for this
      ^^^^^^^^^^^^^^^^^
config/environments/development.rb:11:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :access_key_id => "AKIAI32VLLBYAJJ2THYA", #TODO: Use ENV for this
                        ^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:11:49: C: Missing space after #.
      :access_key_id => "AKIAI32VLLBYAJJ2THYA", #TODO: Use ENV for this
                                                ^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:12:7: C: Use the new Ruby 1.9 hash syntax.
      :secret_access_key => "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9",  #TODO: Use ENV for this
      ^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:12:29: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :secret_access_key => "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9",  #TODO: Use ENV for this
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:12:74: C: Missing space after #.
      :secret_access_key => "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9",  #TODO: Use ENV for this
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:12:81: C: Line is too long. [96/80]
      :secret_access_key => "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9",  #TODO: Use ENV for this
                                                                                ^^^^^^^^^^^^^^^^
config/environments/development.rb:13:7: C: Use the new Ruby 1.9 hash syntax.
      :region => 'ap-southeast-1'
      ^^^^^^^^^^
config/environments/production.rb:2:81: C: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/environments/production.rb:4:78: C: Space inside } missing.
  config.action_mailer.default_url_options = { host: 'http://www.sheethub.co'}
                                                                             ^
config/environments/production.rb:8:5: C: Use the new Ruby 1.9 hash syntax.
    :storage => :s3,
    ^^^^^^^^^^^
config/environments/production.rb:9:5: C: Use the new Ruby 1.9 hash syntax.
    :s3_credentials => {
    ^^^^^^^^^^^^^^^^^^
config/environments/production.rb:10:7: C: Use the new Ruby 1.9 hash syntax.
      :bucket => "sheethub",
      ^^^^^^^^^^
config/environments/production.rb:10:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :bucket => "sheethub",
                 ^^^^^^^^^^
config/environments/production.rb:11:7: C: Use the new Ruby 1.9 hash syntax.
      :access_key_id => "AKIAI32VLLBYAJJ2THYA", #TODO: Use ENV for this
      ^^^^^^^^^^^^^^^^^
config/environments/production.rb:11:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :access_key_id => "AKIAI32VLLBYAJJ2THYA", #TODO: Use ENV for this
                        ^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:11:49: C: Missing space after #.
      :access_key_id => "AKIAI32VLLBYAJJ2THYA", #TODO: Use ENV for this
                                                ^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:12:7: C: Use the new Ruby 1.9 hash syntax.
      :secret_access_key => "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9"  #TODO: Use ENV for this
      ^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:12:29: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :secret_access_key => "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9"  #TODO: Use ENV for this
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:12:73: C: Missing space after #.
      :secret_access_key => "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9"  #TODO: Use ENV for this
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:12:81: C: Line is too long. [95/80]
      :secret_access_key => "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9"  #TODO: Use ENV for this
                                                                                ^^^^^^^^^^^^^^^
config/environments/production.rb:31:81: C: Line is too long. [104/80]
  # For large-scale production use, consider using a caching reverse proxy like nginx, varnish or squid.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:54:81: C: Line is too long. [96/80]
  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
                                                                                ^^^^^^^^^^^^^^^^
config/environments/production.rb:73:81: C: Line is too long. [95/80]
  # application.js, application.css, and all non-JS/CSS in app/assets folder are already added.
                                                                                ^^^^^^^^^^^^^^^
config/environments/production.rb:77:81: C: Line is too long. [100/80]
  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
                                                                                ^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:2:81: C: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/initializers/active_admin.rb:8:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.site_title = "Sheethub"
                      ^^^^^^^^^^
config/initializers/active_admin.rb:87:1: C: Extra blank line detected.
config/initializers/active_admin.rb:106:1: C: Extra blank line detected.
config/initializers/active_admin.rb:115:1: C: Extra blank line detected.
config/initializers/active_admin.rb:118:81: C: Line is too long. [83/80]
  # This allows your users to comment on any resource registered with Active Admin.
                                                                                ^^^
config/initializers/active_admin.rb:129:1: C: Extra blank line detected.
config/initializers/active_admin.rb:136:1: C: Extra blank line detected.
config/initializers/active_admin.rb:144:1: C: Extra blank line detected.
config/initializers/active_admin.rb:149:1: C: Extra blank line detected.
config/initializers/active_admin.rb:157:1: C: Extra blank line detected.
config/initializers/active_admin.rb:167:81: C: Line is too long. [101/80]
  # You can provide an options hash for more control, which is passed along to stylesheet_link_tag():
                                                                                ^^^^^^^^^^^^^^^^^^^^^
config/initializers/active_admin.rb:173:1: C: Extra blank line detected.
config/initializers/active_admin.rb:182:1: C: Extra blank line detected.
config/initializers/active_admin.rb:185:81: C: Line is too long. [94/80]
  # You can add a navigation menu to be used in your application, or configure a provided menu
                                                                                ^^^^^^^^^^^^^^
config/initializers/active_admin.rb:187:81: C: Line is too long. [90/80]
  # To change the default utility navigation to show a link to your website & a logout btn
                                                                                ^^^^^^^^^^
config/initializers/active_admin.rb:191:82: C: Line is too long. [116/80]
  #       menu.add label: "My Great Website", url: "http://www.mygreatwebsite.com", html_options: { target: :blank }
                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/active_admin.rb:200:82: C: Line is too long. [116/80]
  #       menu.add label: "My Great Website", url: "http://www.mygreatwebsite.com", html_options: { target: :blank }
                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/active_admin.rb:204:1: C: Extra blank line detected.
config/initializers/active_admin.rb:226:1: C: Extra blank line detected.
config/initializers/active_admin.rb:234:1: C: Extra blank line detected.
config/initializers/active_admin.rb:237:3: C: Use only ascii symbols in comments.
  # By default the index screen includes a “Filters” sidebar on the right
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/active_admin.rb:247:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    id_field = "id"
               ^^^^
config/initializers/backtrace_silencers.rb:3:81: C: Line is too long. [107/80]
# You can add backtrace silencers for libraries that you're using but don't wish to see in your backtraces.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:6:81: C: Line is too long. [112/80]
# You can also remove all the silencers if you're trying to debug a problem that might stem from framework code.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/cookies_serializer.rb:3:68: C: Final newline missing.
Rails.application.config.action_dispatch.cookies_serializer = :json

config/initializers/devise.rb:7:81: C: Line is too long. [154/80]
  # config.secret_key = '99cf26bb9dda8626aa3c2dc23a1ee5523caa88927bb96d4cbf72dd13b4c18e1a1fc7e6d50f8bd0a5ac5a71b246d1ccd792d21eb3760700f67829ac771fbff69b'
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:29:81: C: Line is too long. [83/80]
  # session. If you need permissions, you should implement that in a before filter.
                                                                                ^^^
config/initializers/devise.rb:34:81: C: Line is too long. [84/80]
  # Configure parameters from the request object used for authentication. Each entry
                                                                                ^^^^
config/initializers/devise.rb:36:81: C: Line is too long. [85/80]
  # find_for_authentication method and considered in your model lookup. For instance,
                                                                                ^^^^^
config/initializers/devise.rb:37:81: C: Line is too long. [88/80]
  # if you set :request_keys to [:subdomain], :subdomain will be used on authentication.
                                                                                ^^^^^^^^
config/initializers/devise.rb:38:81: C: Line is too long. [89/80]
  # The same considerations mentioned for authentication_keys also apply to request_keys.
                                                                                ^^^^^^^^^
config/initializers/devise.rb:44:35: C: Space inside square brackets detected.
  config.case_insensitive_keys = [ :email ]
                                  ^
config/initializers/devise.rb:44:42: C: Space inside square brackets detected.
  config.case_insensitive_keys = [ :email ]
                                         ^
config/initializers/devise.rb:48:81: C: Line is too long. [85/80]
  # modifying a user and when used to authenticate or find a user. Default is :email.
                                                                                ^^^^^
config/initializers/devise.rb:49:35: C: Space inside square brackets detected.
  config.strip_whitespace_keys = [ :email ]
                                  ^
config/initializers/devise.rb:49:42: C: Space inside square brackets detected.
  config.strip_whitespace_keys = [ :email ]
                                         ^
config/initializers/devise.rb:52:81: C: Line is too long. [81/80]
  # It can be set to an array that will enable params authentication only for the
                                                                                ^
config/initializers/devise.rb:53:81: C: Line is too long. [85/80]
  # given strategies, for example, `config.params_authenticatable = [:database]` will
                                                                                ^^^^^
config/initializers/devise.rb:59:81: C: Line is too long. [83/80]
  # given strategies, for example, `config.http_authenticatable = [:database]` will
                                                                                ^^^
config/initializers/devise.rb:61:81: C: Line is too long. [84/80]
  # :database      = Support basic authentication with authentication key + password
                                                                                ^^^^
config/initializers/devise.rb:90:81: C: Line is too long. [86/80]
  # using other encryptors, it sets how many times you want the password re-encrypted.
                                                                                ^^^^^^
config/initializers/devise.rb:92:81: C: Line is too long. [82/80]
  # Limiting the stretches to just one in testing will increase the performance of
                                                                                ^^
config/initializers/devise.rb:94:81: C: Line is too long. [82/80]
  # a value less than 10 in other environments. Note that, for bcrypt (the default
                                                                                ^^
config/initializers/devise.rb:95:81: C: Line is too long. [83/80]
  # encryptor), the cost increases exponentially with the number of stretches (e.g.
                                                                                ^^^
config/initializers/devise.rb:96:81: C: Line is too long. [83/80]
  # a value of 20 is already extremely slow: approx. 60 seconds for 1 calculation).
                                                                                ^^^
config/initializers/devise.rb:100:81: C: Line is too long. [150/80]
  # config.pepper = '30b60bd05f6b8447d3f7c42e8f118694fec4ead7b6da7e93c606c92694de8e69e9c9d2b3b394aaeefe77ee3c699ac916c6ff7bedb2d7bcdd745de356184ec0cc'
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:119:81: C: Line is too long. [86/80]
  # initial account confirmation) to be applied. Requires additional unconfirmed_email
                                                                                ^^^^^^
config/initializers/devise.rb:121:81: C: Line is too long. [84/80]
  # unconfirmed_email column, and copied to email column on successful confirmation.
                                                                                ^^^^
config/initializers/devise.rb:160:81: C: Line is too long. [85/80]
  # :failed_attempts = Locks an account after a number of failed attempts to sign in.
                                                                                ^^^^^
config/initializers/devise.rb:169:81: C: Line is too long. [83/80]
  # :time  = Re-enables login after a certain amount of time (see :unlock_in below)
                                                                                ^^^
config/initializers/devise.rb:195:81: C: Line is too long. [87/80]
  # Allow you to use another encryption algorithm besides bcrypt (default). You can use
                                                                                ^^^^^^^
config/initializers/devise.rb:196:81: C: Line is too long. [85/80]
  # :sha1, :sha512 or encryptors from others authentication tools as :clearance_sha1,
                                                                                ^^^^^
config/initializers/devise.rb:197:81: C: Line is too long. [86/80]
  # :authlogic_sha512 (then you should set stretches above to 20 for default behavior)
                                                                                ^^^^^^
config/initializers/devise.rb:198:81: C: Line is too long. [83/80]
  # and :restful_authentication_sha1 (then you should set stretches to 10, and copy
                                                                                ^^^
config/initializers/devise.rb:205:81: C: Line is too long. [82/80]
  # Turn scoped views on. Before rendering "sessions/new", it will first check for
                                                                                ^^
config/initializers/devise.rb:235:81: C: Line is too long. [82/80]
  config.omniauth :facebook, '902390029790151', 'b7236253262491f735fcc463aa6f0910'
                                                                                ^^
config/initializers/devise.rb:236:81: C: Line is too long. [140/80]
  config.omniauth :google_oauth2, '714586554129-6jmvhhoecqmk29m40rrdsfh3t52g25ft.apps.googleusercontent.com', 'xii6s6Cp8MNQWI8cCrLwWsrn', {}
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:242:81: C: Line is too long. [82/80]
  # change the failure app, you can configure them inside the config.warden block.
                                                                                ^^
config/initializers/devise.rb:250:81: C: Line is too long. [81/80]
  # When using Devise inside an engine, let's call it `MyEngine`, and this engine
                                                                                ^
config/initializers/friendly_id.rb:20:5: C: Align the elements of an array literal if they span more than one line.
    stylesheets assets javascripts images)
    ^^^^^^^^^^^
config/initializers/friendly_id.rb:55:81: C: Line is too long. [82/80]
  # When FriendlyId can not generate a unique ID from your base method, it appends
                                                                                ^^
config/initializers/friendly_id.rb:56:81: C: Line is too long. [83/80]
  # a UUID, separated by a single dash. You can configure the character used as the
                                                                                ^^^
config/initializers/friendly_id.rb:57:81: C: Line is too long. [82/80]
  # separator. If you're upgrading from FriendlyId 4, you may wish to replace this
                                                                                ^^
config/initializers/friendly_id.rb:79:81: C: Line is too long. [82/80]
  # languages that don't use the Roman alphabet, that's not usually suffient. Here
                                                                                ^^
config/initializers/friendly_id.rb:80:81: C: Line is too long. [82/80]
  # we use the Babosa library to transliterate Russian Cyrillic slugs to ASCII. If
                                                                                ^^
config/initializers/mini_magick.rb:3:4: C: Final newline missing.
end

config/initializers/paypal.rb:1:15: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
PAYPAL_MODE = "sandbox"
              ^^^^^^^^^
config/initializers/paypal.rb:2:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
PAYPAL_CLASSIC_APP_ID = "APP-80W284485P519543T" #SANDBOX
                        ^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/paypal.rb:2:49: C: Missing space after #.
PAYPAL_CLASSIC_APP_ID = "APP-80W284485P519543T" #SANDBOX
                                                ^^^^^^^^
config/initializers/paypal.rb:3:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
PAYPAL_USERNAME = "yosriady-facilitator_api1.gmail.com"
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/paypal.rb:4:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
PAYPAL_PASSWORD = "H739SP4UDQSHEGAW"
                  ^^^^^^^^^^^^^^^^^^
config/initializers/paypal.rb:5:20: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
PAYPAL_SIGNATURE = "A6AFKLF9K9Odzd81iNIOAJrlric4AKKVz.DGUTuNFWqyRFUGYkyp5-Ya"
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/paypal.rb:9:3: C: Use the new Ruby 1.9 hash syntax.
  :mode      => PAYPAL_MODE,  # Set "live" for production
  ^^^^^^^^^^^^^
config/initializers/paypal.rb:10:3: C: Use the new Ruby 1.9 hash syntax.
  :app_id    => PAYPAL_CLASSIC_APP_ID,
  ^^^^^^^^^^^^^
config/initializers/paypal.rb:11:3: C: Use the new Ruby 1.9 hash syntax.
  :username  => PAYPAL_USERNAME,
  ^^^^^^^^^^^^^
config/initializers/paypal.rb:12:3: C: Use the new Ruby 1.9 hash syntax.
  :password  => PAYPAL_PASSWORD,
  ^^^^^^^^^^^^^
config/initializers/paypal.rb:13:3: C: Use the new Ruby 1.9 hash syntax.
  :signature => PAYPAL_SIGNATURE)
  ^^^^^^^^^^^^^
config/initializers/paypal.rb:13:34: C: Final newline missing.
  :signature => PAYPAL_SIGNATURE)

config/initializers/s3_direct_upload.rb:3:21: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  c.access_key_id = "AKIAI32VLLBYAJJ2THYA"
                    ^^^^^^^^^^^^^^^^^^^^^^
config/initializers/s3_direct_upload.rb:4:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  c.secret_access_key = "STIW0JGoAnCR5R0CscwUzE/lf0ucxnK4AvKoOGU9"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/s3_direct_upload.rb:5:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  c.bucket = "sheethub"
             ^^^^^^^^^^
config/initializers/s3_direct_upload.rb:6:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  c.region = "ap-southeast-1"
             ^^^^^^^^^^^^^^^^
config/initializers/s3_direct_upload.rb:7:11: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  c.url = "https://sheethub.s3.amazonaws.com/"
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/s3_direct_upload.rb:8:4: C: Final newline missing.
end

config/initializers/simple_form.rb:9:5: C: Align the elements of a hash literal if they span more than one line.
    hint_class: :field_with_hint, error_class: :field_with_errors do |b|
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/simple_form.rb:80:81: C: Line is too long. [92/80]
  # You can wrap a collection of radio/check boxes in a pre-defined tag, defaulting to none.
                                                                                ^^^^^^^^^^^^
config/initializers/simple_form.rb:83:81: C: Line is too long. [83/80]
  # You can define the class to use on all collection wrappers. Defaulting to none.
                                                                                ^^^
config/initializers/simple_form.rb:109:81: C: Line is too long. [87/80]
  # Tell browsers whether to use the native HTML5 validations (novalidate form option).
                                                                                ^^^^^^^
config/initializers/simple_form.rb:110:81: C: Line is too long. [89/80]
  # These validations are enabled in SimpleForm's internal config but disabled by default
                                                                                ^^^^^^^^^
config/initializers/simple_form.rb:111:81: C: Line is too long. [91/80]
  # in this configuration, which is recommended due to some quirks from different browsers.
                                                                                ^^^^^^^^^^^
config/initializers/simple_form.rb:112:81: C: Line is too long. [93/80]
  # To stop SimpleForm from generating the novalidate option, enabling the HTML5 validations,
                                                                                ^^^^^^^^^^^^^
config/initializers/simple_form.rb:125:81: C: Line is too long. [85/80]
  # type as key and the wrapper that will be used for all inputs with specified type.
                                                                                ^^^^^
config/initializers/simple_form_bootstrap.rb:3:81: C: Line is too long. [93/80]
  config.wrappers :bootstrap, tag: 'div', class: 'control-group', error_class: 'error' do |b|
                                                                                ^^^^^^^^^^^^^
config/initializers/simple_form_bootstrap.rb:14:48: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.wrappers :prepend, tag: 'div', class: "control-group", error_class: 'error' do |b|
                                               ^^^^^^^^^^^^^^^
config/initializers/simple_form_bootstrap.rb:14:81: C: Line is too long. [91/80]
  config.wrappers :prepend, tag: 'div', class: "control-group", error_class: 'error' do |b|
                                                                                ^^^^^^^^^^^
config/initializers/simple_form_bootstrap.rb:27:47: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.wrappers :append, tag: 'div', class: "control-group", error_class: 'error' do |b|
                                              ^^^^^^^^^^^^^^^
config/initializers/simple_form_bootstrap.rb:27:81: C: Line is too long. [90/80]
  config.wrappers :append, tag: 'div', class: "control-group", error_class: 'error' do |b|
                                                                                ^^^^^^^^^^
config/initializers/wrap_parameters.rb:6:81: C: Line is too long. [96/80]
# Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.
                                                                                ^^^^^^^^^^^^^^^^
config/routes.rb:4:29: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  mount PgHero::Engine, at: "pghero"
                            ^^^^^^^^
config/routes.rb:7:40: C: Space missing after colon.
  get 'orders/success/:tracking_id', to:'orders#success', as: 'orders_success'
                                       ^
config/routes.rb:12:22: C: Use the new Ruby 1.9 hash syntax.
  devise_for :users, :controllers => { :registrations => "users/registrations", :omniauth_callbacks => "users/omniauth_callbacks" }
                     ^^^^^^^^^^^^^^^
config/routes.rb:12:40: C: Use the new Ruby 1.9 hash syntax.
  devise_for :users, :controllers => { :registrations => "users/registrations", :omniauth_callbacks => "users/omniauth_callbacks" }
                                       ^^^^^^^^^^^^^^^^^
config/routes.rb:12:58: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  devise_for :users, :controllers => { :registrations => "users/registrations", :omniauth_callbacks => "users/omniauth_callbacks" }
                                                         ^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:12:81: C: Line is too long. [131/80]
  devise_for :users, :controllers => { :registrations => "users/registrations", :omniauth_callbacks => "users/omniauth_callbacks" }
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:12:81: C: Use the new Ruby 1.9 hash syntax.
  devise_for :users, :controllers => { :registrations => "users/registrations", :omniauth_callbacks => "users/omniauth_callbacks" }
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:12:104: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  devise_for :users, :controllers => { :registrations => "users/registrations", :omniauth_callbacks => "users/omniauth_callbacks" }
                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:14:29: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    get 'user/:username' => "users/registrations#profile", :as => :user_profile
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:15:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    get 'user/:username/favorites' => "users/registrations#favorites", :as => :user_favorites
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:15:81: C: Line is too long. [93/80]
    get 'user/:username/favorites' => "users/registrations#favorites", :as => :user_favorites
                                                                                ^^^^^^^^^^^^^
config/routes.rb:16:81: C: Line is too long. [132/80]
    match 'users/finish_registration' => 'users/registrations#finish_registration', via: [:get, :patch], :as => :finish_registration
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:17:29: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    get 'private_sheets' => "users/registrations#private_sheets", :as => :user_private_sheets
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:17:81: C: Line is too long. [93/80]
    get 'private_sheets' => "users/registrations#private_sheets", :as => :user_private_sheets
                                                                                ^^^^^^^^^^^^^
config/routes.rb:18:20: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    get 'sales' => "users/registrations#sales", :as => :user_sales
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:19:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    get 'purchases' => "users/registrations#purchases", :as => :user_purchases
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:20:20: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    get 'trash' => "users/registrations#trash", :as => :user_trash
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140726163355_acts_as_taggable_on_migration.acts_as_taggable_on_engine.rb:3:3: C: Method has too many lines. [12/10]
  def self.up
  ^^^
db/migrate/20140726163356_add_missing_unique_indices.acts_as_taggable_on_engine.rb:9:81: C: Line is too long. [90/80]
              [:tag_id, :taggable_id, :taggable_type, :context, :tagger_id, :tagger_type],
                                                                                ^^^^^^^^^^
db/migrate/20140726164032_create_sheets.rb:1:1: C: Missing top-level class documentation comment.
class CreateSheets < ActiveRecord::Migration
^^^^^
db/migrate/20140726164032_create_sheets.rb:2:3: C: Method has too many lines. [11/10]
  def change
  ^^^
db/migrate/20140727063247_add_difficulty_and_instrument_to_sheet.rb:1:1: C: Missing top-level class documentation comment.
class AddDifficultyAndInstrumentToSheet < ActiveRecord::Migration
^^^^^
db/migrate/20140727064523_change_instrument_to_instruments.rb:1:1: C: Missing top-level class documentation comment.
class ChangeInstrumentToInstruments < ActiveRecord::Migration
^^^^^
db/migrate/20140727074823_add_not_null_to_instruments.rb:1:1: C: Missing top-level class documentation comment.
class AddNotNullToInstruments < ActiveRecord::Migration
^^^^^
db/migrate/20140727074823_add_not_null_to_instruments.rb:3:52: C: Use the new Ruby 1.9 hash syntax.
    change_column :sheets, :instruments, :integer, :null => false
                                                   ^^^^^^^^
db/migrate/20140727165113_remove_not_null_from_instruments.rb:1:1: C: Missing top-level class documentation comment.
class RemoveNotNullFromInstruments < ActiveRecord::Migration
^^^^^
db/migrate/20140727165113_remove_not_null_from_instruments.rb:3:52: C: Use the new Ruby 1.9 hash syntax.
    change_column :sheets, :instruments, :integer, :null => true
                                                   ^^^^^^^^
db/migrate/20140801150431_add_default_to_sheet_pages.rb:1:1: C: Missing top-level class documentation comment.
class AddDefaultToSheetPages < ActiveRecord::Migration
^^^^^
db/migrate/20140802120818_add_pdf_to_sheet.rb:1:1: C: Missing top-level class documentation comment.
class AddPdfToSheet < ActiveRecord::Migration
^^^^^
db/migrate/20140802164358_create_assets.rb:1:1: C: Missing top-level class documentation comment.
class CreateAssets < ActiveRecord::Migration
^^^^^
db/migrate/20140802165049_add_file_to_assets.rb:1:1: C: Missing top-level class documentation comment.
class AddFileToAssets < ActiveRecord::Migration
^^^^^
db/migrate/20140802165403_add_sheet_id_to_assets.rb:1:1: C: Missing top-level class documentation comment.
class AddSheetIdToAssets < ActiveRecord::Migration
^^^^^
db/migrate/20140812084248_update_assets.rb:1:1: C: Missing top-level class documentation comment.
class UpdateAssets < ActiveRecord::Migration
^^^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:1:1: C: Missing top-level class documentation comment.
class CreateFriendlyIdSlugs < ActiveRecord::Migration
^^^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:2:3: C: Method has too many lines. [11/10]
  def change
  ^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:4:15: C: Put one space between the method name and the first argument.
      t.string   :slug,           :null => false
              ^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:4:35: C: Use the new Ruby 1.9 hash syntax.
      t.string   :slug,           :null => false
                                  ^^^^^^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:5:16: C: Put one space between the method name and the first argument.
      t.integer  :sluggable_id,   :null => false
               ^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:5:35: C: Use the new Ruby 1.9 hash syntax.
      t.integer  :sluggable_id,   :null => false
                                  ^^^^^^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:6:15: C: Put one space between the method name and the first argument.
      t.string   :sluggable_type, :limit => 50
              ^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:6:35: C: Use the new Ruby 1.9 hash syntax.
      t.string   :sluggable_type, :limit => 50
                                  ^^^^^^^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:7:15: C: Put one space between the method name and the first argument.
      t.string   :scope
              ^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:12:69: C: Use the new Ruby 1.9 hash syntax.
    add_index :friendly_id_slugs, [:slug, :sluggable_type, :scope], :unique => true
                                                                    ^^^^^^^^^^
db/migrate/20140815060142_create_friendly_id_slugs.rb:12:81: C: Line is too long. [83/80]
    add_index :friendly_id_slugs, [:slug, :sluggable_type, :scope], :unique => true
                                                                                ^^^
db/migrate/20140815060537_add_slug_to_sheet.rb:1:1: C: Missing top-level class documentation comment.
class AddSlugToSheet < ActiveRecord::Migration
^^^^^
db/migrate/20140815060537_add_slug_to_sheet.rb:4:31: C: Use the new Ruby 1.9 hash syntax.
    add_index :sheets, :slug, :unique => true
                              ^^^^^^^^^^
db/migrate/20140822175450_devise_create_users.rb:1:1: C: Missing top-level class documentation comment.
class DeviseCreateUsers < ActiveRecord::Migration
^^^^^
db/migrate/20140822175450_devise_create_users.rb:2:3: C: Assignment Branch Condition size for change is too high. [18/15]
  def change
  ^^^
db/migrate/20140822175450_devise_create_users.rb:2:3: C: Method has too many lines. [19/10]
  def change
  ^^^
db/migrate/20140822175450_devise_create_users.rb:5:59: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :email,              null: false, default: ""
                                                          ^^
db/migrate/20140822175450_devise_create_users.rb:6:59: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :encrypted_password, null: false, default: ""
                                                          ^^
db/migrate/20140822175450_devise_create_users.rb:9:15: C: Put one space between the method name and the first argument.
      t.string   :reset_password_token
              ^^^
db/migrate/20140822175450_devise_create_users.rb:16:16: C: Put one space between the method name and the first argument.
      t.integer  :sign_in_count, default: 0, null: false
               ^^
db/migrate/20140822175450_devise_create_users.rb:19:13: C: Put one space between the method name and the first argument.
      t.inet     :current_sign_in_ip
            ^^^^^
db/migrate/20140822175450_devise_create_users.rb:20:13: C: Put one space between the method name and the first argument.
      t.inet     :last_sign_in_ip
            ^^^^^
db/migrate/20140822175450_devise_create_users.rb:23:15: C: Put one space between the method name and the first argument.
      t.string   :confirmation_token
              ^^^
db/migrate/20140822175450_devise_create_users.rb:26:15: C: Put one space between the method name and the first argument.
      t.string   :unconfirmed_email # Only if using reconfirmable
              ^^^
db/migrate/20140822175450_devise_create_users.rb:29:81: C: Line is too long. [104/80]
      # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140822175450_devise_create_users.rb:33:1: C: Extra blank line detected.
db/migrate/20140826121709_add_provider_and_uid_to_users.rb:1:1: C: Missing top-level class documentation comment.
class AddProviderAndUidToUsers < ActiveRecord::Migration
^^^^^
db/migrate/20140826125032_add_name_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddNameToUser < ActiveRecord::Migration
^^^^^
db/migrate/20140826130030_remove_confirmable_from_users.rb:1:1: C: Missing top-level class documentation comment.
class RemoveConfirmableFromUsers < ActiveRecord::Migration
^^^^^
db/migrate/20140827091533_add_image_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddImageToUser < ActiveRecord::Migration
^^^^^
db/migrate/20140827092703_add_first_and_last_name_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddFirstAndLastNameToUser < ActiveRecord::Migration
^^^^^
db/migrate/20140827093320_add_user_id_to_sheets.rb:1:1: C: Missing top-level class documentation comment.
class AddUserIdToSheets < ActiveRecord::Migration
^^^^^
db/migrate/20140827152438_add_user_name_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddUserNameToUser < ActiveRecord::Migration
^^^^^
db/migrate/20140828040223_add_finished_boolean_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddFinishedBooleanToUser < ActiveRecord::Migration
^^^^^
db/migrate/20140902085949_add_tag_line_and_website_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddTagLineAndWebsiteToUser < ActiveRecord::Migration
^^^^^
db/migrate/20140908075702_add_bio_to_users.rb:1:1: C: Missing top-level class documentation comment.
class AddBioToUsers < ActiveRecord::Migration
^^^^^
db/migrate/20140908083921_acts_as_votable_migration.rb:1:1: C: Missing top-level class documentation comment.
class ActsAsVotableMigration < ActiveRecord::Migration
^^^^^
db/migrate/20140908083921_acts_as_votable_migration.rb:2:3: C: Method has too many lines. [14/10]
  def self.up
  ^^^
db/migrate/20140908083921_acts_as_votable_migration.rb:5:30: C: Use the new Ruby 1.9 hash syntax.
      t.references :votable, :polymorphic => true
                             ^^^^^^^^^^^^^^^
db/migrate/20140908083921_acts_as_votable_migration.rb:6:28: C: Use the new Ruby 1.9 hash syntax.
      t.references :voter, :polymorphic => true
                           ^^^^^^^^^^^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:1:1: C: Missing top-level class documentation comment.
class AddCachedVotesToSheets < ActiveRecord::Migration
^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:2:3: C: Method has too many lines. [14/10]
  def self.up
  ^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:3:56: C: Use the new Ruby 1.9 hash syntax.
    add_column :sheets, :cached_votes_total, :integer, :default => 0
                                                       ^^^^^^^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:4:56: C: Use the new Ruby 1.9 hash syntax.
    add_column :sheets, :cached_votes_score, :integer, :default => 0
                                                       ^^^^^^^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:5:53: C: Use the new Ruby 1.9 hash syntax.
    add_column :sheets, :cached_votes_up, :integer, :default => 0
                                                    ^^^^^^^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:6:55: C: Use the new Ruby 1.9 hash syntax.
    add_column :sheets, :cached_votes_down, :integer, :default => 0
                                                      ^^^^^^^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:7:59: C: Use the new Ruby 1.9 hash syntax.
    add_column :sheets, :cached_weighted_score, :integer, :default => 0
                                                          ^^^^^^^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:8:59: C: Use the new Ruby 1.9 hash syntax.
    add_column :sheets, :cached_weighted_total, :integer, :default => 0
                                                          ^^^^^^^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:9:59: C: Use the new Ruby 1.9 hash syntax.
    add_column :sheets, :cached_weighted_average, :float, :default => 0.0
                                                          ^^^^^^^^^^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:10:14: C: Put one space between the method name and the first argument.
    add_index  :sheets, :cached_votes_total
             ^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:11:14: C: Put one space between the method name and the first argument.
    add_index  :sheets, :cached_votes_score
             ^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:12:14: C: Put one space between the method name and the first argument.
    add_index  :sheets, :cached_votes_up
             ^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:13:14: C: Put one space between the method name and the first argument.
    add_index  :sheets, :cached_votes_down
             ^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:14:14: C: Put one space between the method name and the first argument.
    add_index  :sheets, :cached_weighted_score
             ^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:15:14: C: Put one space between the method name and the first argument.
    add_index  :sheets, :cached_weighted_total
             ^^
db/migrate/20140925154358_add_cached_votes_to_sheets.rb:16:14: C: Put one space between the method name and the first argument.
    add_index  :sheets, :cached_weighted_average
             ^^
db/migrate/20141007103905_add_attachment_avatar_to_users.rb:1:1: C: Missing top-level class documentation comment.
class AddAttachmentAvatarToUsers < ActiveRecord::Migration
^^^^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:1:1: C: Missing top-level class documentation comment.
class AddConfirmableToDevise < ActiveRecord::Migration
^^^^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:2:81: C: Line is too long. [82/80]
  # Note: You can't use change, as User.update_all with fail in the down migration
                                                                                ^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:7:81: C: Line is too long. [82/80]
    # add_column :users, :unconfirmed_email, :string # Only if using reconfirmable
                                                                                ^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:8:44: C: Use the new Ruby 1.9 hash syntax.
    add_index :users, :confirmation_token, :unique => true
                                           ^^^^^^^^^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:9:81: C: Line is too long. [93/80]
    # User.reset_column_information # Need for some types of updates, but not for update_all.
                                                                                ^^^^^^^^^^^^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:10:81: C: Line is too long. [90/80]
    # To avoid a short time window between running the migration and updating all existing
                                                                                ^^^^^^^^^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:12:21: C: Use the new Ruby 1.9 hash syntax.
    User.update_all(:confirmed_at => Time.now)
                    ^^^^^^^^^^^^^^^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:17:81: C: Line is too long. [84/80]
    remove_columns :users, :confirmation_token, :confirmed_at, :confirmation_sent_at
                                                                                ^^^^
db/migrate/20141007111704_add_confirmable_to_devise.rb:20:4: C: Final newline missing.
end

db/migrate/20141007160250_devise_create_admin_users.rb:1:1: C: Missing top-level class documentation comment.
class DeviseCreateAdminUsers < ActiveRecord::Migration
^^^^^
db/migrate/20141007160250_devise_create_admin_users.rb:5:81: C: Line is too long. [126/80]
    AdminUser.create!(email: 'admin@example.com', password: 'password', password_confirmation: 'password') if direction == :up
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20141007160250_devise_create_admin_users.rb:8:3: C: Method has too many lines. [15/10]
  def change
  ^^^
db/migrate/20141007160250_devise_create_admin_users.rb:11:59: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :email,              null: false, default: ""
                                                          ^^
db/migrate/20141007160250_devise_create_admin_users.rb:12:59: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :encrypted_password, null: false, default: ""
                                                          ^^
db/migrate/20141007160250_devise_create_admin_users.rb:15:15: C: Put one space between the method name and the first argument.
      t.string   :reset_password_token
              ^^^
db/migrate/20141007160250_devise_create_admin_users.rb:22:16: C: Put one space between the method name and the first argument.
      t.integer  :sign_in_count, default: 0, null: false
               ^^
db/migrate/20141007160250_devise_create_admin_users.rb:25:13: C: Put one space between the method name and the first argument.
      t.inet     :current_sign_in_ip
            ^^^^^
db/migrate/20141007160250_devise_create_admin_users.rb:26:13: C: Put one space between the method name and the first argument.
      t.inet     :last_sign_in_ip
            ^^^^^
db/migrate/20141007160250_devise_create_admin_users.rb:35:81: C: Line is too long. [104/80]
      # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20141007160250_devise_create_admin_users.rb:39:1: C: Extra blank line detected.
db/migrate/20141007160256_create_active_admin_comments.rb:1:1: C: Missing top-level class documentation comment.
class CreateActiveAdminComments < ActiveRecord::Migration
^^^^^
db/migrate/20141007160256_create_active_admin_comments.rb:2:3: C: Method has too many lines. [11/10]
  def self.up
  ^^^
db/migrate/20141007160256_create_active_admin_comments.rb:5:13: C: Put one space between the method name and the first argument.
      t.text   :body
            ^^^
db/migrate/20141008053753_create_flags.rb:1:1: C: Missing top-level class documentation comment.
class CreateFlags < ActiveRecord::Migration
^^^^^
db/migrate/20141010161602_rename_boolean_columns_for_sheet.rb:1:1: C: Missing top-level class documentation comment.
class RenameBooleanColumnsForSheet < ActiveRecord::Migration
^^^^^
db/migrate/20141011181229_add_case_insensitive_unique_username_index_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddCaseInsensitiveUniqueUsernameIndexToUser < ActiveRecord::Migration
^^^^^
db/migrate/20141011181229_add_case_insensitive_unique_username_index_to_user.rb:9:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    execute "DROP INDEX index_users_on_lowercase_username;"
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20141011181229_add_case_insensitive_unique_username_index_to_user.rb:10:34: C: Use the new Ruby 1.9 hash syntax.
    add_index :users, :username, :unique => true
                                 ^^^^^^^^^^
db/migrate/20141011181229_add_case_insensitive_unique_username_index_to_user.rb:12:4: C: Final newline missing.
end

db/migrate/20141018052659_remove_price_from_sheets.rb:1:1: C: Missing top-level class documentation comment.
class RemovePriceFromSheets < ActiveRecord::Migration
^^^^^
db/migrate/20141018053139_remove_is_free_from_sheets.rb:1:1: C: Missing top-level class documentation comment.
class RemoveIsFreeFromSheets < ActiveRecord::Migration
^^^^^
db/migrate/20141018054041_monetize_sheet.rb:1:1: C: Missing top-level class documentation comment.
class MonetizeSheet < ActiveRecord::Migration
^^^^^
db/migrate/20141019170754_create_orders.rb:1:1: C: Missing top-level class documentation comment.
class CreateOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141021083905_add_deleted_at_to_sheets.rb:1:1: C: Missing top-level class documentation comment.
class AddDeletedAtToSheets < ActiveRecord::Migration
^^^^^
db/migrate/20141021101734_add_deleted_at_to_assets.rb:1:1: C: Missing top-level class documentation comment.
class AddDeletedAtToAssets < ActiveRecord::Migration
^^^^^
db/migrate/20141021182916_add_status_to_orders.rb:1:1: C: Missing top-level class documentation comment.
class AddStatusToOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141023085956_create_carts.rb:1:1: C: Missing top-level class documentation comment.
class CreateCarts < ActiveRecord::Migration
^^^^^
db/migrate/20141023090204_remove_paypal_attributes_and_add_cart_id_to_orders.rb:1:1: C: Missing top-level class documentation comment.
class RemovePaypalAttributesAndAddCartIdToOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141023092259_add_user_id_to_cart.rb:1:1: C: Missing top-level class documentation comment.
class AddUserIdToCart < ActiveRecord::Migration
^^^^^
db/migrate/20141023144300_add_default_status_to_orders.rb:1:1: C: Missing top-level class documentation comment.
class AddDefaultStatusToOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141024115207_remove_null_false_from_cart_id_of_orders.rb:1:1: C: Missing top-level class documentation comment.
class RemoveNullFalseFromCartIdOfOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141029060228_rename_paypal_token_to_token_in_carts.rb:1:1: C: Missing top-level class documentation comment.
class RenamePaypalTokenToTokenInCarts < ActiveRecord::Migration
^^^^^
db/migrate/20141029150821_add_publishing_right_to_sheets.rb:1:1: C: Missing top-level class documentation comment.
class AddPublishingRightToSheets < ActiveRecord::Migration
^^^^^
db/migrate/20141029155947_remove_is_original_from_sheets.rb:1:1: C: Missing top-level class documentation comment.
class RemoveIsOriginalFromSheets < ActiveRecord::Migration
^^^^^
db/migrate/20141030122028_add_member_ship_type_to_users.rb:1:1: C: Missing top-level class documentation comment.
class AddMemberShipTypeToUsers < ActiveRecord::Migration
^^^^^
db/migrate/20141030124451_add_last_payout_date_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddLastPayoutDateToUser < ActiveRecord::Migration
^^^^^
db/migrate/20141030124451_add_last_payout_date_to_user.rb:3:58: C: Space missing after colon.
    add_column :users, :last_payout_date, :datetime, null:false, default: Time.now
                                                         ^
db/migrate/20141030124451_add_last_payout_date_to_user.rb:3:81: C: Line is too long. [82/80]
    add_column :users, :last_payout_date, :datetime, null:false, default: Time.now
                                                                                ^^
db/migrate/20141031113310_add_payer_id_to_orders.rb:1:1: C: Missing top-level class documentation comment.
class AddPayerIdToOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141031114936_add_paypal_email_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddPaypalEmailToUser < ActiveRecord::Migration
^^^^^
db/migrate/20141101183019_remove_bio_from_users.rb:1:1: C: Missing top-level class documentation comment.
class RemoveBioFromUsers < ActiveRecord::Migration
^^^^^
db/migrate/20141106150654_add_total_soldto_sheets.rb:1:1: C: Missing top-level class documentation comment.
class AddTotalSoldtoSheets < ActiveRecord::Migration
^^^^^
db/migrate/20141106154127_remove_last_payout_date_from_users.rb:1:1: C: Missing top-level class documentation comment.
class RemoveLastPayoutDateFromUsers < ActiveRecord::Migration
^^^^^
db/migrate/20141106154229_add_published_sheets_boolean_to_user.rb:1:1: C: Missing top-level class documentation comment.
class AddPublishedSheetsBooleanToUser < ActiveRecord::Migration
^^^^^
db/migrate/20141107055212_remove_cart_id_from_orders.rb:1:1: C: Missing top-level class documentation comment.
class RemoveCartIdFromOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141107055330_add_token_to_orders.rb:1:1: C: Missing top-level class documentation comment.
class AddTokenToOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141107060358_drop_carts_table.rb:1:1: C: Missing top-level class documentation comment.
class DropCartsTable < ActiveRecord::Migration
^^^^^
db/migrate/20141108113838_add_fk_indexes.rb:1:1: C: Missing top-level class documentation comment.
class AddFkIndexes < ActiveRecord::Migration
^^^^^
db/migrate/20141110072221_rename_publishing_right_with_license.rb:1:1: C: Missing top-level class documentation comment.
class RenamePublishingRightWithLicense < ActiveRecord::Migration
^^^^^
db/migrate/20141110100909_change_is_public_to_visibility.rb:1:1: C: Missing top-level class documentation comment.
class ChangeIsPublicToVisibility < ActiveRecord::Migration
^^^^^
db/migrate/20141110110353_add_username_index_to_users.rb:1:1: C: Missing top-level class documentation comment.
class AddUsernameIndexToUsers < ActiveRecord::Migration
^^^^^
db/migrate/20141111170426_rename_token_to_tracking_id_for_orders.rb:1:1: C: Missing top-level class documentation comment.
class RenameTokenToTrackingIdForOrders < ActiveRecord::Migration
^^^^^
db/migrate/20141111170653_add_not_null_constraint_to_order_columns.rb:1:1: C: Missing top-level class documentation comment.
class AddNotNullConstraintToOrderColumns < ActiveRecord::Migration
^^^^^
db/migrate/20141111170653_add_not_null_constraint_to_order_columns.rb:3:51: C: Use the new Ruby 1.9 hash syntax.
    change_column :orders, :tracking_id, :string, :null => false
                                                  ^^^^^^^^
db/migrate/20141111170653_add_not_null_constraint_to_order_columns.rb:4:48: C: Use the new Ruby 1.9 hash syntax.
    change_column :orders, :payer_id, :string, :null => false
                                               ^^^^^^^^
db/migrate/20141112165203_add_royalty_and_commission_to_orders.rb:1:1: C: Missing top-level class documentation comment.
class AddRoyaltyAndCommissionToOrders < ActiveRecord::Migration
^^^^^
db/schema.rb:4:81: C: Line is too long. [81/80]
# incrementally modify your database, and then regenerate this schema definition.
                                                                                ^
db/schema.rb:9:81: C: Line is too long. [86/80]
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
                                                                                ^^^^^^
db/schema.rb:12:81: C: Line is too long. [86/80]
# It's strongly recommended that you check this file into your version control system.
                                                                                ^^^^^^
db/schema.rb:14:38: C: Separate every 3 digits in the integer portion of a number with underscores(_).
ActiveRecord::Schema.define(version: 20141112165203) do
                                     ^^^^^^^^^^^^^^
db/schema.rb:17:20: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  enable_extension "plpgsql"
                   ^^^^^^^^^
db/schema.rb:19:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_admin_comments", force: true do |t|
               ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:20:13: C: Put one space between the method name and the first argument.
    t.string   "namespace"
            ^^^
db/schema.rb:20:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "namespace"
               ^^^^^^^^^^^
db/schema.rb:21:11: C: Put one space between the method name and the first argument.
    t.text     "body"
          ^^^^^
db/schema.rb:21:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text     "body"
               ^^^^^^
db/schema.rb:22:13: C: Put one space between the method name and the first argument.
    t.string   "resource_id",   null: false
            ^^^
db/schema.rb:22:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "resource_id",   null: false
               ^^^^^^^^^^^^^
db/schema.rb:23:13: C: Put one space between the method name and the first argument.
    t.string   "resource_type", null: false
            ^^^
db/schema.rb:23:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "resource_type", null: false
               ^^^^^^^^^^^^^^^
db/schema.rb:24:14: C: Put one space between the method name and the first argument.
    t.integer  "author_id"
             ^^
db/schema.rb:24:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "author_id"
               ^^^^^^^^^^^
db/schema.rb:25:13: C: Put one space between the method name and the first argument.
    t.string   "author_type"
            ^^^
db/schema.rb:25:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "author_type"
               ^^^^^^^^^^^^^
db/schema.rb:26:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:27:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:30:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id", using: :btree
            ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:30:38: C: Use %w or %W for array of words.
  add_index "active_admin_comments", ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id", using: :btree
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:30:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id", using: :btree
                                      ^^^^^^^^^^^^^
db/schema.rb:30:54: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id", using: :btree
                                                     ^^^^^^^^^^^
db/schema.rb:30:74: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id", using: :btree
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:30:81: C: Line is too long. [146/80]
  add_index "active_admin_comments", ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:31:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["namespace"], name: "index_active_admin_comments_on_namespace", using: :btree
            ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:31:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["namespace"], name: "index_active_admin_comments_on_namespace", using: :btree
                                      ^^^^^^^^^^^
db/schema.rb:31:59: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["namespace"], name: "index_active_admin_comments_on_namespace", using: :btree
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:31:81: C: Line is too long. [115/80]
  add_index "active_admin_comments", ["namespace"], name: "index_active_admin_comments_on_namespace", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:32:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id", using: :btree
            ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:32:38: C: Use %w or %W for array of words.
  add_index "active_admin_comments", ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id", using: :btree
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:32:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id", using: :btree
                                      ^^^^^^^^^^^^^^^
db/schema.rb:32:56: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id", using: :btree
                                                       ^^^^^^^^^^^^^
db/schema.rb:32:78: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "active_admin_comments", ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id", using: :btree
                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:32:81: C: Line is too long. [154/80]
  add_index "active_admin_comments", ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:34:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "admin_users", force: true do |t|
               ^^^^^^^^^^^^^
db/schema.rb:35:13: C: Put one space between the method name and the first argument.
    t.string   "email",                  default: "", null: false
            ^^^
db/schema.rb:35:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "email",                  default: "", null: false
               ^^^^^^^
db/schema.rb:35:51: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "email",                  default: "", null: false
                                                  ^^
db/schema.rb:36:13: C: Put one space between the method name and the first argument.
    t.string   "encrypted_password",     default: "", null: false
            ^^^
db/schema.rb:36:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "encrypted_password",     default: "", null: false
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:36:51: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "encrypted_password",     default: "", null: false
                                                  ^^
db/schema.rb:37:13: C: Put one space between the method name and the first argument.
    t.string   "reset_password_token"
            ^^^
db/schema.rb:37:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "reset_password_token"
               ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:38:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "reset_password_sent_at"
               ^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:39:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "remember_created_at"
               ^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:40:14: C: Put one space between the method name and the first argument.
    t.integer  "sign_in_count",          default: 0,  null: false
             ^^
db/schema.rb:40:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "sign_in_count",          default: 0,  null: false
               ^^^^^^^^^^^^^^^
db/schema.rb:41:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "current_sign_in_at"
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:42:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "last_sign_in_at"
               ^^^^^^^^^^^^^^^^^
db/schema.rb:43:11: C: Put one space between the method name and the first argument.
    t.inet     "current_sign_in_ip"
          ^^^^^
db/schema.rb:43:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.inet     "current_sign_in_ip"
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:44:11: C: Put one space between the method name and the first argument.
    t.inet     "last_sign_in_ip"
          ^^^^^
db/schema.rb:44:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.inet     "last_sign_in_ip"
               ^^^^^^^^^^^^^^^^^
db/schema.rb:45:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:46:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:49:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "admin_users", ["email"], name: "index_admin_users_on_email", unique: true, using: :btree
            ^^^^^^^^^^^^^
db/schema.rb:49:29: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "admin_users", ["email"], name: "index_admin_users_on_email", unique: true, using: :btree
                            ^^^^^^^
db/schema.rb:49:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "admin_users", ["email"], name: "index_admin_users_on_email", unique: true, using: :btree
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:49:81: C: Line is too long. [101/80]
  add_index "admin_users", ["email"], name: "index_admin_users_on_email", unique: true, using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:50:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "admin_users", ["reset_password_token"], name: "index_admin_users_on_reset_password_token", unique: true, using: :btree
            ^^^^^^^^^^^^^
db/schema.rb:50:29: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "admin_users", ["reset_password_token"], name: "index_admin_users_on_reset_password_token", unique: true, using: :btree
                            ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:50:60: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "admin_users", ["reset_password_token"], name: "index_admin_users_on_reset_password_token", unique: true, using: :btree
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:50:81: C: Line is too long. [131/80]
  add_index "admin_users", ["reset_password_token"], name: "index_admin_users_on_reset_password_token", unique: true, using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:52:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "assets", force: true do |t|
               ^^^^^^^^
db/schema.rb:53:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:54:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:55:13: C: Put one space between the method name and the first argument.
    t.string   "filename"
            ^^^
db/schema.rb:55:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "filename"
               ^^^^^^^^^^
db/schema.rb:56:13: C: Put one space between the method name and the first argument.
    t.string   "filetype"
            ^^^
db/schema.rb:56:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "filetype"
               ^^^^^^^^^^
db/schema.rb:57:14: C: Put one space between the method name and the first argument.
    t.integer  "filesize"
             ^^
db/schema.rb:57:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "filesize"
               ^^^^^^^^^^
db/schema.rb:58:14: C: Put one space between the method name and the first argument.
    t.integer  "sheet_id"
             ^^
db/schema.rb:58:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "sheet_id"
               ^^^^^^^^^^
db/schema.rb:59:13: C: Put one space between the method name and the first argument.
    t.string   "url"
            ^^^
db/schema.rb:59:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "url"
               ^^^^^
db/schema.rb:60:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "deleted_at"
               ^^^^^^^^^^^^
db/schema.rb:63:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "assets", ["deleted_at"], name: "index_assets_on_deleted_at", using: :btree
            ^^^^^^^^
db/schema.rb:63:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "assets", ["deleted_at"], name: "index_assets_on_deleted_at", using: :btree
                       ^^^^^^^^^^^^
db/schema.rb:63:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "assets", ["deleted_at"], name: "index_assets_on_deleted_at", using: :btree
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:63:81: C: Line is too long. [87/80]
  add_index "assets", ["deleted_at"], name: "index_assets_on_deleted_at", using: :btree
                                                                                ^^^^^^^
db/schema.rb:64:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "assets", ["sheet_id"], name: "index_assets_on_sheet_id", using: :btree
            ^^^^^^^^
db/schema.rb:64:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "assets", ["sheet_id"], name: "index_assets_on_sheet_id", using: :btree
                       ^^^^^^^^^^
db/schema.rb:64:43: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "assets", ["sheet_id"], name: "index_assets_on_sheet_id", using: :btree
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:64:81: C: Line is too long. [83/80]
  add_index "assets", ["sheet_id"], name: "index_assets_on_sheet_id", using: :btree
                                                                                ^^^
db/schema.rb:66:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "flags", force: true do |t|
               ^^^^^^^
db/schema.rb:67:14: C: Put one space between the method name and the first argument.
    t.integer  "user_id"
             ^^
db/schema.rb:67:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "user_id"
               ^^^^^^^^^
db/schema.rb:68:14: C: Put one space between the method name and the first argument.
    t.integer  "sheet_id",   null: false
             ^^
db/schema.rb:68:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "sheet_id",   null: false
               ^^^^^^^^^^
db/schema.rb:69:13: C: Put one space between the method name and the first argument.
    t.string   "email"
            ^^^
db/schema.rb:69:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "email"
               ^^^^^^^
db/schema.rb:70:11: C: Put one space between the method name and the first argument.
    t.text     "message",    null: false
          ^^^^^
db/schema.rb:70:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text     "message",    null: false
               ^^^^^^^^^
db/schema.rb:71:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:72:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:75:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "flags", ["sheet_id"], name: "index_flags_on_sheet_id", using: :btree
            ^^^^^^^
db/schema.rb:75:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "flags", ["sheet_id"], name: "index_flags_on_sheet_id", using: :btree
                      ^^^^^^^^^^
db/schema.rb:75:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "flags", ["sheet_id"], name: "index_flags_on_sheet_id", using: :btree
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:75:81: C: Line is too long. [81/80]
  add_index "flags", ["sheet_id"], name: "index_flags_on_sheet_id", using: :btree
                                                                                ^
db/schema.rb:76:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "flags", ["user_id"], name: "index_flags_on_user_id", using: :btree
            ^^^^^^^
db/schema.rb:76:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "flags", ["user_id"], name: "index_flags_on_user_id", using: :btree
                      ^^^^^^^^^
db/schema.rb:76:41: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "flags", ["user_id"], name: "index_flags_on_user_id", using: :btree
                                        ^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:78:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "friendly_id_slugs", force: true do |t|
               ^^^^^^^^^^^^^^^^^^^
db/schema.rb:79:13: C: Put one space between the method name and the first argument.
    t.string   "slug",                      null: false
            ^^^
db/schema.rb:79:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "slug",                      null: false
               ^^^^^^
db/schema.rb:80:14: C: Put one space between the method name and the first argument.
    t.integer  "sluggable_id",              null: false
             ^^
db/schema.rb:80:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "sluggable_id",              null: false
               ^^^^^^^^^^^^^^
db/schema.rb:81:13: C: Put one space between the method name and the first argument.
    t.string   "sluggable_type", limit: 50
            ^^^
db/schema.rb:81:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "sluggable_type", limit: 50
               ^^^^^^^^^^^^^^^^
db/schema.rb:82:13: C: Put one space between the method name and the first argument.
    t.string   "scope"
            ^^^
db/schema.rb:82:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "scope"
               ^^^^^^^
db/schema.rb:83:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:86:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type", "scope"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope", unique: true, using: :btree
            ^^^^^^^^^^^^^^^^^^^
db/schema.rb:86:34: C: Use %w or %W for array of words.
  add_index "friendly_id_slugs", ["slug", "sluggable_type", "scope"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope", unique: true, using: :btree
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:86:35: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type", "scope"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope", unique: true, using: :btree
                                  ^^^^^^
db/schema.rb:86:43: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type", "scope"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope", unique: true, using: :btree
                                          ^^^^^^^^^^^^^^^^
db/schema.rb:86:61: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type", "scope"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope", unique: true, using: :btree
                                                            ^^^^^^^
db/schema.rb:86:77: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type", "scope"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope", unique: true, using: :btree
                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:86:81: C: Line is too long. [167/80]
  add_index "friendly_id_slugs", ["slug", "sluggable_type", "scope"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope", unique: true, using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:87:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type", using: :btree
            ^^^^^^^^^^^^^^^^^^^
db/schema.rb:87:34: C: Use %w or %W for array of words.
  add_index "friendly_id_slugs", ["slug", "sluggable_type"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type", using: :btree
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:87:35: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type", using: :btree
                                  ^^^^^^
db/schema.rb:87:43: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type", using: :btree
                                          ^^^^^^^^^^^^^^^^
db/schema.rb:87:68: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["slug", "sluggable_type"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type", using: :btree
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:87:81: C: Line is too long. [134/80]
  add_index "friendly_id_slugs", ["slug", "sluggable_type"], name: "index_friendly_id_slugs_on_slug_and_sluggable_type", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:88:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["sluggable_id"], name: "index_friendly_id_slugs_on_sluggable_id", using: :btree
            ^^^^^^^^^^^^^^^^^^^
db/schema.rb:88:35: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["sluggable_id"], name: "index_friendly_id_slugs_on_sluggable_id", using: :btree
                                  ^^^^^^^^^^^^^^
db/schema.rb:88:58: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["sluggable_id"], name: "index_friendly_id_slugs_on_sluggable_id", using: :btree
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:88:81: C: Line is too long. [113/80]
  add_index "friendly_id_slugs", ["sluggable_id"], name: "index_friendly_id_slugs_on_sluggable_id", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:89:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["sluggable_type"], name: "index_friendly_id_slugs_on_sluggable_type", using: :btree
            ^^^^^^^^^^^^^^^^^^^
db/schema.rb:89:35: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["sluggable_type"], name: "index_friendly_id_slugs_on_sluggable_type", using: :btree
                                  ^^^^^^^^^^^^^^^^
db/schema.rb:89:60: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "friendly_id_slugs", ["sluggable_type"], name: "index_friendly_id_slugs_on_sluggable_type", using: :btree
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:89:81: C: Line is too long. [117/80]
  add_index "friendly_id_slugs", ["sluggable_type"], name: "index_friendly_id_slugs_on_sluggable_type", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:91:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "orders", force: true do |t|
               ^^^^^^^^
db/schema.rb:92:14: C: Put one space between the method name and the first argument.
    t.integer  "sheet_id",                  null: false
             ^^
db/schema.rb:92:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "sheet_id",                  null: false
               ^^^^^^^^^^
db/schema.rb:93:14: C: Put one space between the method name and the first argument.
    t.integer  "user_id",                   null: false
             ^^
db/schema.rb:93:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "user_id",                   null: false
               ^^^^^^^^^
db/schema.rb:94:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "purchased_at"
               ^^^^^^^^^^^^^^
db/schema.rb:95:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:96:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:97:14: C: Put one space between the method name and the first argument.
    t.integer  "status",        default: 0
             ^^
db/schema.rb:97:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "status",        default: 0
               ^^^^^^^^
db/schema.rb:98:13: C: Put one space between the method name and the first argument.
    t.string   "payer_id",                  null: false
            ^^^
db/schema.rb:98:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "payer_id",                  null: false
               ^^^^^^^^^^
db/schema.rb:99:13: C: Put one space between the method name and the first argument.
    t.string   "tracking_id",               null: false
            ^^^
db/schema.rb:99:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "tracking_id",               null: false
               ^^^^^^^^^^^^^
db/schema.rb:100:14: C: Put one space between the method name and the first argument.
    t.integer  "royalty_cents",             null: false
             ^^
db/schema.rb:100:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "royalty_cents",             null: false
               ^^^^^^^^^^^^^^^
db/schema.rb:103:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "orders", ["sheet_id"], name: "index_orders_on_sheet_id", using: :btree
            ^^^^^^^^
db/schema.rb:103:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "orders", ["sheet_id"], name: "index_orders_on_sheet_id", using: :btree
                       ^^^^^^^^^^
db/schema.rb:103:43: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "orders", ["sheet_id"], name: "index_orders_on_sheet_id", using: :btree
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:103:81: C: Line is too long. [83/80]
  add_index "orders", ["sheet_id"], name: "index_orders_on_sheet_id", using: :btree
                                                                                ^^^
db/schema.rb:104:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "orders", ["user_id"], name: "index_orders_on_user_id", using: :btree
            ^^^^^^^^
db/schema.rb:104:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "orders", ["user_id"], name: "index_orders_on_user_id", using: :btree
                       ^^^^^^^^^
db/schema.rb:104:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "orders", ["user_id"], name: "index_orders_on_user_id", using: :btree
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:104:81: C: Line is too long. [81/80]
  add_index "orders", ["user_id"], name: "index_orders_on_user_id", using: :btree
                                                                                ^
db/schema.rb:106:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "sheets", force: true do |t|
               ^^^^^^^^
db/schema.rb:107:14: C: Put one space between the method name and the first argument.
    t.boolean  "is_flagged",              default: false, null: false
             ^^
db/schema.rb:107:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean  "is_flagged",              default: false, null: false
               ^^^^^^^^^^^^
db/schema.rb:108:13: C: Put one space between the method name and the first argument.
    t.string   "title",                                   null: false
            ^^^
db/schema.rb:108:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "title",                                   null: false
               ^^^^^^^
db/schema.rb:109:11: C: Put one space between the method name and the first argument.
    t.text     "description",                             null: false
          ^^^^^
db/schema.rb:109:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text     "description",                             null: false
               ^^^^^^^^^^^^^
db/schema.rb:110:14: C: Put one space between the method name and the first argument.
    t.integer  "pages",                   default: 0,     null: false
             ^^
db/schema.rb:110:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "pages",                   default: 0,     null: false
               ^^^^^^^
db/schema.rb:111:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:112:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:113:14: C: Put one space between the method name and the first argument.
    t.integer  "difficulty"
             ^^
db/schema.rb:113:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "difficulty"
               ^^^^^^^^^^^^
db/schema.rb:114:14: C: Put one space between the method name and the first argument.
    t.integer  "instruments"
             ^^
db/schema.rb:114:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "instruments"
               ^^^^^^^^^^^^^
db/schema.rb:115:13: C: Put one space between the method name and the first argument.
    t.string   "pdf_file_name"
            ^^^
db/schema.rb:115:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "pdf_file_name"
               ^^^^^^^^^^^^^^^
db/schema.rb:116:13: C: Put one space between the method name and the first argument.
    t.string   "pdf_content_type"
            ^^^
db/schema.rb:116:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "pdf_content_type"
               ^^^^^^^^^^^^^^^^^^
db/schema.rb:117:14: C: Put one space between the method name and the first argument.
    t.integer  "pdf_file_size"
             ^^
db/schema.rb:117:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "pdf_file_size"
               ^^^^^^^^^^^^^^^
db/schema.rb:118:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "pdf_updated_at"
               ^^^^^^^^^^^^^^^^
db/schema.rb:119:13: C: Put one space between the method name and the first argument.
    t.string   "slug"
            ^^^
db/schema.rb:119:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "slug"
               ^^^^^^
db/schema.rb:120:14: C: Put one space between the method name and the first argument.
    t.integer  "user_id",                                 null: false
             ^^
db/schema.rb:120:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "user_id",                                 null: false
               ^^^^^^^^^
db/schema.rb:121:14: C: Put one space between the method name and the first argument.
    t.integer  "cached_votes_total",      default: 0
             ^^
db/schema.rb:121:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "cached_votes_total",      default: 0
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:122:14: C: Put one space between the method name and the first argument.
    t.integer  "cached_votes_score",      default: 0
             ^^
db/schema.rb:122:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "cached_votes_score",      default: 0
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:123:14: C: Put one space between the method name and the first argument.
    t.integer  "cached_votes_up",         default: 0
             ^^
db/schema.rb:123:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "cached_votes_up",         default: 0
               ^^^^^^^^^^^^^^^^^
db/schema.rb:124:14: C: Put one space between the method name and the first argument.
    t.integer  "cached_votes_down",       default: 0
             ^^
db/schema.rb:124:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "cached_votes_down",       default: 0
               ^^^^^^^^^^^^^^^^^^^
db/schema.rb:125:14: C: Put one space between the method name and the first argument.
    t.integer  "cached_weighted_score",   default: 0
             ^^
db/schema.rb:125:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "cached_weighted_score",   default: 0
               ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:126:14: C: Put one space between the method name and the first argument.
    t.integer  "cached_weighted_total",   default: 0
             ^^
db/schema.rb:126:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "cached_weighted_total",   default: 0
               ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:127:12: C: Put one space between the method name and the first argument.
    t.float    "cached_weighted_average", default: 0.0
           ^^^^
db/schema.rb:127:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "cached_weighted_average", default: 0.0
               ^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:128:14: C: Put one space between the method name and the first argument.
    t.integer  "price_cents",             default: 0,     null: false
             ^^
db/schema.rb:128:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "price_cents",             default: 0,     null: false
               ^^^^^^^^^^^^^
db/schema.rb:129:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "deleted_at"
               ^^^^^^^^^^^^
db/schema.rb:130:14: C: Put one space between the method name and the first argument.
    t.integer  "license",                                 null: false
             ^^
db/schema.rb:130:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "license",                                 null: false
               ^^^^^^^^^
db/schema.rb:131:14: C: Put one space between the method name and the first argument.
    t.integer  "total_sold",              default: 0
             ^^
db/schema.rb:131:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "total_sold",              default: 0
               ^^^^^^^^^^^^
db/schema.rb:132:14: C: Put one space between the method name and the first argument.
    t.integer  "visibility",              default: 0
             ^^
db/schema.rb:132:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "visibility",              default: 0
               ^^^^^^^^^^^^
db/schema.rb:135:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_down"], name: "index_sheets_on_cached_votes_down", using: :btree
            ^^^^^^^^
db/schema.rb:135:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_down"], name: "index_sheets_on_cached_votes_down", using: :btree
                       ^^^^^^^^^^^^^^^^^^^
db/schema.rb:135:52: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_down"], name: "index_sheets_on_cached_votes_down", using: :btree
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:135:81: C: Line is too long. [101/80]
  add_index "sheets", ["cached_votes_down"], name: "index_sheets_on_cached_votes_down", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:136:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_score"], name: "index_sheets_on_cached_votes_score", using: :btree
            ^^^^^^^^
db/schema.rb:136:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_score"], name: "index_sheets_on_cached_votes_score", using: :btree
                       ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:136:53: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_score"], name: "index_sheets_on_cached_votes_score", using: :btree
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:136:81: C: Line is too long. [103/80]
  add_index "sheets", ["cached_votes_score"], name: "index_sheets_on_cached_votes_score", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:137:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_total"], name: "index_sheets_on_cached_votes_total", using: :btree
            ^^^^^^^^
db/schema.rb:137:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_total"], name: "index_sheets_on_cached_votes_total", using: :btree
                       ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:137:53: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_total"], name: "index_sheets_on_cached_votes_total", using: :btree
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:137:81: C: Line is too long. [103/80]
  add_index "sheets", ["cached_votes_total"], name: "index_sheets_on_cached_votes_total", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:138:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_up"], name: "index_sheets_on_cached_votes_up", using: :btree
            ^^^^^^^^
db/schema.rb:138:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_up"], name: "index_sheets_on_cached_votes_up", using: :btree
                       ^^^^^^^^^^^^^^^^^
db/schema.rb:138:50: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_votes_up"], name: "index_sheets_on_cached_votes_up", using: :btree
                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:138:81: C: Line is too long. [97/80]
  add_index "sheets", ["cached_votes_up"], name: "index_sheets_on_cached_votes_up", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^
db/schema.rb:139:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_average"], name: "index_sheets_on_cached_weighted_average", using: :btree
            ^^^^^^^^
db/schema.rb:139:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_average"], name: "index_sheets_on_cached_weighted_average", using: :btree
                       ^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:139:58: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_average"], name: "index_sheets_on_cached_weighted_average", using: :btree
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:139:81: C: Line is too long. [113/80]
  add_index "sheets", ["cached_weighted_average"], name: "index_sheets_on_cached_weighted_average", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:140:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_score"], name: "index_sheets_on_cached_weighted_score", using: :btree
            ^^^^^^^^
db/schema.rb:140:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_score"], name: "index_sheets_on_cached_weighted_score", using: :btree
                       ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:140:56: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_score"], name: "index_sheets_on_cached_weighted_score", using: :btree
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:140:81: C: Line is too long. [109/80]
  add_index "sheets", ["cached_weighted_score"], name: "index_sheets_on_cached_weighted_score", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:141:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_total"], name: "index_sheets_on_cached_weighted_total", using: :btree
            ^^^^^^^^
db/schema.rb:141:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_total"], name: "index_sheets_on_cached_weighted_total", using: :btree
                       ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:141:56: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["cached_weighted_total"], name: "index_sheets_on_cached_weighted_total", using: :btree
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:141:81: C: Line is too long. [109/80]
  add_index "sheets", ["cached_weighted_total"], name: "index_sheets_on_cached_weighted_total", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:142:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["deleted_at"], name: "index_sheets_on_deleted_at", using: :btree
            ^^^^^^^^
db/schema.rb:142:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["deleted_at"], name: "index_sheets_on_deleted_at", using: :btree
                       ^^^^^^^^^^^^
db/schema.rb:142:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["deleted_at"], name: "index_sheets_on_deleted_at", using: :btree
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:142:81: C: Line is too long. [87/80]
  add_index "sheets", ["deleted_at"], name: "index_sheets_on_deleted_at", using: :btree
                                                                                ^^^^^^^
db/schema.rb:143:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["slug"], name: "index_sheets_on_slug", unique: true, using: :btree
            ^^^^^^^^
db/schema.rb:143:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["slug"], name: "index_sheets_on_slug", unique: true, using: :btree
                       ^^^^^^
db/schema.rb:143:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["slug"], name: "index_sheets_on_slug", unique: true, using: :btree
                                      ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:143:81: C: Line is too long. [89/80]
  add_index "sheets", ["slug"], name: "index_sheets_on_slug", unique: true, using: :btree
                                                                                ^^^^^^^^^
db/schema.rb:144:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["user_id"], name: "index_sheets_on_user_id", using: :btree
            ^^^^^^^^
db/schema.rb:144:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["user_id"], name: "index_sheets_on_user_id", using: :btree
                       ^^^^^^^^^
db/schema.rb:144:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "sheets", ["user_id"], name: "index_sheets_on_user_id", using: :btree
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:144:81: C: Line is too long. [81/80]
  add_index "sheets", ["user_id"], name: "index_sheets_on_user_id", using: :btree
                                                                                ^
db/schema.rb:146:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "taggings", force: true do |t|
               ^^^^^^^^^^
db/schema.rb:147:14: C: Put one space between the method name and the first argument.
    t.integer  "tag_id"
             ^^
db/schema.rb:147:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "tag_id"
               ^^^^^^^^
db/schema.rb:148:14: C: Put one space between the method name and the first argument.
    t.integer  "taggable_id"
             ^^
db/schema.rb:148:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "taggable_id"
               ^^^^^^^^^^^^^
db/schema.rb:149:13: C: Put one space between the method name and the first argument.
    t.string   "taggable_type"
            ^^^
db/schema.rb:149:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "taggable_type"
               ^^^^^^^^^^^^^^^
db/schema.rb:150:14: C: Put one space between the method name and the first argument.
    t.integer  "tagger_id"
             ^^
db/schema.rb:150:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "tagger_id"
               ^^^^^^^^^^^
db/schema.rb:151:13: C: Put one space between the method name and the first argument.
    t.string   "tagger_type"
            ^^^
db/schema.rb:151:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "tagger_type"
               ^^^^^^^^^^^^^
db/schema.rb:152:13: C: Put one space between the method name and the first argument.
    t.string   "context",       limit: 128
            ^^^
db/schema.rb:152:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "context",       limit: 128
               ^^^^^^^^^
db/schema.rb:153:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:156:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
            ^^^^^^^^^^
db/schema.rb:156:25: C: Use %w or %W for array of words.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:156:26: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                         ^^^^^^^^
db/schema.rb:156:36: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                                   ^^^^^^^^^^^^^
db/schema.rb:156:51: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                                                  ^^^^^^^^^^^^^^^
db/schema.rb:156:68: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                                                                   ^^^^^^^^^
db/schema.rb:156:79: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                                                                              ^^^^^^^^^^^
db/schema.rb:156:81: C: Line is too long. [156/80]
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:156:92: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                                                                                           ^^^^^^^^^^^^^
db/schema.rb:156:114: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["tag_id", "taggable_id", "taggable_type", "context", "tagger_id", "tagger_type"], name: "taggings_idx", unique: true, using: :btree
                                                                                                                 ^^^^^^^^^^^^^^
db/schema.rb:157:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["taggable_id", "taggable_type", "context"], name: "index_taggings_on_taggable_id_and_taggable_type_and_context", using: :btree
            ^^^^^^^^^^
db/schema.rb:157:25: C: Use %w or %W for array of words.
  add_index "taggings", ["taggable_id", "taggable_type", "context"], name: "index_taggings_on_taggable_id_and_taggable_type_and_context", using: :btree
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:157:26: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["taggable_id", "taggable_type", "context"], name: "index_taggings_on_taggable_id_and_taggable_type_and_context", using: :btree
                         ^^^^^^^^^^^^^
db/schema.rb:157:41: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["taggable_id", "taggable_type", "context"], name: "index_taggings_on_taggable_id_and_taggable_type_and_context", using: :btree
                                        ^^^^^^^^^^^^^^^
db/schema.rb:157:58: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["taggable_id", "taggable_type", "context"], name: "index_taggings_on_taggable_id_and_taggable_type_and_context", using: :btree
                                                         ^^^^^^^^^
db/schema.rb:157:76: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "taggings", ["taggable_id", "taggable_type", "context"], name: "index_taggings_on_taggable_id_and_taggable_type_and_context", using: :btree
                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:157:81: C: Line is too long. [151/80]
  add_index "taggings", ["taggable_id", "taggable_type", "context"], name: "index_taggings_on_taggable_id_and_taggable_type_and_context", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:159:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "tags", force: true do |t|
               ^^^^^^
db/schema.rb:160:13: C: Put one space between the method name and the first argument.
    t.string  "name"
            ^^
db/schema.rb:160:15: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string  "name"
              ^^^^^^
db/schema.rb:161:15: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "taggings_count", default: 0
              ^^^^^^^^^^^^^^^^
db/schema.rb:164:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "tags", ["name"], name: "index_tags_on_name", unique: true, using: :btree
            ^^^^^^
db/schema.rb:164:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "tags", ["name"], name: "index_tags_on_name", unique: true, using: :btree
                     ^^^^^^
db/schema.rb:164:37: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "tags", ["name"], name: "index_tags_on_name", unique: true, using: :btree
                                    ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:164:81: C: Line is too long. [85/80]
  add_index "tags", ["name"], name: "index_tags_on_name", unique: true, using: :btree
                                                                                ^^^^^
db/schema.rb:166:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "users", force: true do |t|
               ^^^^^^^
db/schema.rb:167:13: C: Put one space between the method name and the first argument.
    t.string   "email",                  default: "",    null: false
            ^^^
db/schema.rb:167:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "email",                  default: "",    null: false
               ^^^^^^^
db/schema.rb:167:51: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "email",                  default: "",    null: false
                                                  ^^
db/schema.rb:168:13: C: Put one space between the method name and the first argument.
    t.string   "encrypted_password",     default: "",    null: false
            ^^^
db/schema.rb:168:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "encrypted_password",     default: "",    null: false
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:168:51: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "encrypted_password",     default: "",    null: false
                                                  ^^
db/schema.rb:169:13: C: Put one space between the method name and the first argument.
    t.string   "reset_password_token"
            ^^^
db/schema.rb:169:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "reset_password_token"
               ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:170:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "reset_password_sent_at"
               ^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:171:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "remember_created_at"
               ^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:172:14: C: Put one space between the method name and the first argument.
    t.integer  "sign_in_count",          default: 0,     null: false
             ^^
db/schema.rb:172:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "sign_in_count",          default: 0,     null: false
               ^^^^^^^^^^^^^^^
db/schema.rb:173:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "current_sign_in_at"
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:174:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "last_sign_in_at"
               ^^^^^^^^^^^^^^^^^
db/schema.rb:175:11: C: Put one space between the method name and the first argument.
    t.inet     "current_sign_in_ip"
          ^^^^^
db/schema.rb:175:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.inet     "current_sign_in_ip"
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:176:11: C: Put one space between the method name and the first argument.
    t.inet     "last_sign_in_ip"
          ^^^^^
db/schema.rb:176:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.inet     "last_sign_in_ip"
               ^^^^^^^^^^^^^^^^^
db/schema.rb:177:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:178:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:179:13: C: Put one space between the method name and the first argument.
    t.string   "provider"
            ^^^
db/schema.rb:179:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "provider"
               ^^^^^^^^^^
db/schema.rb:180:13: C: Put one space between the method name and the first argument.
    t.string   "uid"
            ^^^
db/schema.rb:180:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "uid"
               ^^^^^
db/schema.rb:181:13: C: Put one space between the method name and the first argument.
    t.string   "name"
            ^^^
db/schema.rb:181:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "name"
               ^^^^^^
db/schema.rb:182:13: C: Put one space between the method name and the first argument.
    t.string   "image"
            ^^^
db/schema.rb:182:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "image"
               ^^^^^^^
db/schema.rb:183:13: C: Put one space between the method name and the first argument.
    t.string   "first_name"
            ^^^
db/schema.rb:183:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "first_name"
               ^^^^^^^^^^^^
db/schema.rb:184:13: C: Put one space between the method name and the first argument.
    t.string   "last_name"
            ^^^
db/schema.rb:184:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "last_name"
               ^^^^^^^^^^^
db/schema.rb:185:13: C: Put one space between the method name and the first argument.
    t.string   "username"
            ^^^
db/schema.rb:185:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "username"
               ^^^^^^^^^^
db/schema.rb:186:14: C: Put one space between the method name and the first argument.
    t.boolean  "finished_registration?", default: false
             ^^
db/schema.rb:186:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean  "finished_registration?", default: false
               ^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:187:13: C: Put one space between the method name and the first argument.
    t.string   "tagline"
            ^^^
db/schema.rb:187:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "tagline"
               ^^^^^^^^^
db/schema.rb:188:13: C: Put one space between the method name and the first argument.
    t.string   "website"
            ^^^
db/schema.rb:188:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "website"
               ^^^^^^^^^
db/schema.rb:189:13: C: Put one space between the method name and the first argument.
    t.string   "avatar_file_name"
            ^^^
db/schema.rb:189:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "avatar_file_name"
               ^^^^^^^^^^^^^^^^^^
db/schema.rb:190:13: C: Put one space between the method name and the first argument.
    t.string   "avatar_content_type"
            ^^^
db/schema.rb:190:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "avatar_content_type"
               ^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:191:14: C: Put one space between the method name and the first argument.
    t.integer  "avatar_file_size"
             ^^
db/schema.rb:191:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "avatar_file_size"
               ^^^^^^^^^^^^^^^^^^
db/schema.rb:192:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "avatar_updated_at"
               ^^^^^^^^^^^^^^^^^^^
db/schema.rb:193:13: C: Put one space between the method name and the first argument.
    t.string   "confirmation_token"
            ^^^
db/schema.rb:193:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "confirmation_token"
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:194:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "confirmed_at"
               ^^^^^^^^^^^^^^
db/schema.rb:195:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "confirmation_sent_at"
               ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:196:14: C: Put one space between the method name and the first argument.
    t.integer  "membership_type",        default: 0,     null: false
             ^^
db/schema.rb:196:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "membership_type",        default: 0,     null: false
               ^^^^^^^^^^^^^^^^^
db/schema.rb:197:13: C: Put one space between the method name and the first argument.
    t.string   "paypal_email"
            ^^^
db/schema.rb:197:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "paypal_email"
               ^^^^^^^^^^^^^^
db/schema.rb:198:14: C: Put one space between the method name and the first argument.
    t.boolean  "has_published",          default: false
             ^^
db/schema.rb:198:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean  "has_published",          default: false
               ^^^^^^^^^^^^^^^
db/schema.rb:201:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["confirmation_token"], name: "index_users_on_confirmation_token", unique: true, using: :btree
            ^^^^^^^
db/schema.rb:201:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["confirmation_token"], name: "index_users_on_confirmation_token", unique: true, using: :btree
                      ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:201:52: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["confirmation_token"], name: "index_users_on_confirmation_token", unique: true, using: :btree
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:201:81: C: Line is too long. [115/80]
  add_index "users", ["confirmation_token"], name: "index_users_on_confirmation_token", unique: true, using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:202:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["email"], name: "index_users_on_email", unique: true, using: :btree
            ^^^^^^^
db/schema.rb:202:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["email"], name: "index_users_on_email", unique: true, using: :btree
                      ^^^^^^^
db/schema.rb:202:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["email"], name: "index_users_on_email", unique: true, using: :btree
                                      ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:202:81: C: Line is too long. [89/80]
  add_index "users", ["email"], name: "index_users_on_email", unique: true, using: :btree
                                                                                ^^^^^^^^^
db/schema.rb:203:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true, using: :btree
            ^^^^^^^
db/schema.rb:203:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true, using: :btree
                      ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:203:54: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true, using: :btree
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:203:81: C: Line is too long. [119/80]
  add_index "users", ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true, using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:204:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["username"], name: "index_users_on_username", unique: true, using: :btree
            ^^^^^^^
db/schema.rb:204:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["username"], name: "index_users_on_username", unique: true, using: :btree
                      ^^^^^^^^^^
db/schema.rb:204:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "users", ["username"], name: "index_users_on_username", unique: true, using: :btree
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:204:81: C: Line is too long. [95/80]
  add_index "users", ["username"], name: "index_users_on_username", unique: true, using: :btree
                                                                                ^^^^^^^^^^^^^^^
db/schema.rb:206:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "votes", force: true do |t|
               ^^^^^^^
db/schema.rb:207:14: C: Put one space between the method name and the first argument.
    t.integer  "votable_id"
             ^^
db/schema.rb:207:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "votable_id"
               ^^^^^^^^^^^^
db/schema.rb:208:13: C: Put one space between the method name and the first argument.
    t.string   "votable_type"
            ^^^
db/schema.rb:208:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "votable_type"
               ^^^^^^^^^^^^^^
db/schema.rb:209:14: C: Put one space between the method name and the first argument.
    t.integer  "voter_id"
             ^^
db/schema.rb:209:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "voter_id"
               ^^^^^^^^^^
db/schema.rb:210:13: C: Put one space between the method name and the first argument.
    t.string   "voter_type"
            ^^^
db/schema.rb:210:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "voter_type"
               ^^^^^^^^^^^^
db/schema.rb:211:14: C: Put one space between the method name and the first argument.
    t.boolean  "vote_flag"
             ^^
db/schema.rb:211:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean  "vote_flag"
               ^^^^^^^^^^^
db/schema.rb:212:13: C: Put one space between the method name and the first argument.
    t.string   "vote_scope"
            ^^^
db/schema.rb:212:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "vote_scope"
               ^^^^^^^^^^^^
db/schema.rb:213:14: C: Put one space between the method name and the first argument.
    t.integer  "vote_weight"
             ^^
db/schema.rb:213:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "vote_weight"
               ^^^^^^^^^^^^^
db/schema.rb:214:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:215:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:218:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["votable_id", "votable_type", "vote_scope"], name: "index_votes_on_votable_id_and_votable_type_and_vote_scope", using: :btree
            ^^^^^^^
db/schema.rb:218:22: C: Use %w or %W for array of words.
  add_index "votes", ["votable_id", "votable_type", "vote_scope"], name: "index_votes_on_votable_id_and_votable_type_and_vote_scope", using: :btree
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:218:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["votable_id", "votable_type", "vote_scope"], name: "index_votes_on_votable_id_and_votable_type_and_vote_scope", using: :btree
                      ^^^^^^^^^^^^
db/schema.rb:218:37: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["votable_id", "votable_type", "vote_scope"], name: "index_votes_on_votable_id_and_votable_type_and_vote_scope", using: :btree
                                    ^^^^^^^^^^^^^^
db/schema.rb:218:53: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["votable_id", "votable_type", "vote_scope"], name: "index_votes_on_votable_id_and_votable_type_and_vote_scope", using: :btree
                                                    ^^^^^^^^^^^^
db/schema.rb:218:74: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["votable_id", "votable_type", "vote_scope"], name: "index_votes_on_votable_id_and_votable_type_and_vote_scope", using: :btree
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:218:81: C: Line is too long. [147/80]
  add_index "votes", ["votable_id", "votable_type", "vote_scope"], name: "index_votes_on_votable_id_and_votable_type_and_vote_scope", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:219:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["voter_id", "voter_type", "vote_scope"], name: "index_votes_on_voter_id_and_voter_type_and_vote_scope", using: :btree
            ^^^^^^^
db/schema.rb:219:22: C: Use %w or %W for array of words.
  add_index "votes", ["voter_id", "voter_type", "vote_scope"], name: "index_votes_on_voter_id_and_voter_type_and_vote_scope", using: :btree
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:219:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["voter_id", "voter_type", "vote_scope"], name: "index_votes_on_voter_id_and_voter_type_and_vote_scope", using: :btree
                      ^^^^^^^^^^
db/schema.rb:219:35: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["voter_id", "voter_type", "vote_scope"], name: "index_votes_on_voter_id_and_voter_type_and_vote_scope", using: :btree
                                  ^^^^^^^^^^^^
db/schema.rb:219:49: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["voter_id", "voter_type", "vote_scope"], name: "index_votes_on_voter_id_and_voter_type_and_vote_scope", using: :btree
                                                ^^^^^^^^^^^^
db/schema.rb:219:70: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "votes", ["voter_id", "voter_type", "vote_scope"], name: "index_votes_on_voter_id_and_voter_type_and_vote_scope", using: :btree
                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:219:81: C: Line is too long. [139/80]
  add_index "votes", ["voter_id", "voter_type", "vote_scope"], name: "index_votes_on_voter_id_and_voter_type_and_vote_scope", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:28:5: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "paranoia", :github => "radar/paranoia", :branch => "rails4"
    ^^^^^^^^^^
Gemfile:28:17: C: Use the new Ruby 1.9 hash syntax.
gem "paranoia", :github => "radar/paranoia", :branch => "rails4"
                ^^^^^^^^^^
Gemfile:28:28: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "paranoia", :github => "radar/paranoia", :branch => "rails4"
                           ^^^^^^^^^^^^^^^^
Gemfile:28:46: C: Use the new Ruby 1.9 hash syntax.
gem "paranoia", :github => "radar/paranoia", :branch => "rails4"
                                             ^^^^^^^^^^
Gemfile:28:57: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "paranoia", :github => "radar/paranoia", :branch => "rails4"
                                                        ^^^^^^^^
Gemfile:40:5: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "omniauth-google-oauth2"
    ^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:102:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "bullet"
      ^^^^^^^^
Gemfile:103:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  gem "rails_best_practices"
      ^^^^^^^^^^^^^^^^^^^^^^
Gemfile:113:4: C: Final newline missing.
end

lib/paperclip_processors/preview.rb:2:3: C: Missing top-level class documentation comment.
  class Preview < Processor
  ^^^^^
lib/paperclip_processors/preview.rb:3:1: C: Extra empty line detected at class body beginning.
lib/paperclip_processors/preview.rb:13:58: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      dst = Tempfile.new([@basename, 'png'].compact.join("."))
                                                         ^^^
lib/paperclip_processors/preview.rb:15:12: C: Surrounding space missing for operator '='.
      image= MiniMagick::Image.open(File.expand_path(@file.path))
           ^
lib/paperclip_processors/preview.rb:19:7: C: Redundant return detected.
      return dst
      ^^^^^^
lib/paperclip_processors/preview.rb:22:4: C: Final newline missing.
end

lib/paperclip_processors/watermark.rb:2:3: C: Missing top-level class documentation comment.
  class Watermark < Processor
  ^^^^^
lib/paperclip_processors/watermark.rb:13:5: C: Assignment Branch Condition size for make is too high. [17.26/15]
    def make
    ^^^
lib/paperclip_processors/watermark.rb:13:5: C: Method has too many lines. [13/10]
    def make
    ^^^
lib/paperclip_processors/watermark.rb:16:45: W: Shadowing outer local variable - composited.
      composited = pdf.pages.inject([]) do |composited, page|
                                            ^^^^^^^^^^
lib/paperclip_processors/watermark.rb:18:21: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          c.compose "Over"
                    ^^^^^^
lib/paperclip_processors/watermark.rb:19:21: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          c.gravity "SouthEast"
                    ^^^^^^^^^^^
lib/paperclip_processors/watermark.rb:26:7: C: Redundant return detected.
      return pdf
      ^^^^^^
lib/paperclip_processors/watermark.rb:29:4: C: Final newline missing.
end

Rakefile:2:81: C: Line is too long. [90/80]
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.
                                                                                ^^^^^^^^^^
spec/controllers/order_controller_spec.rb:3:33: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe OrderController, :type => :controller do
                                ^^^^^^^^
spec/controllers/order_controller_spec.rb:5:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET paypal_checkout" do
           ^^^^^^^^^^^^^^^^^^^^^
spec/controllers/order_controller_spec.rb:6:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/order_controller_spec.rb:12:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET new" do
           ^^^^^^^^^
spec/controllers/order_controller_spec.rb:13:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/order_controller_spec.rb:19:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET create" do
           ^^^^^^^^^^^^
spec/controllers/order_controller_spec.rb:20:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/pages_controller_spec.rb:3:33: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe PagesController, :type => :controller do
                                ^^^^^^^^
spec/controllers/pages_controller_spec.rb:5:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET about" do
           ^^^^^^^^^^^
spec/controllers/pages_controller_spec.rb:6:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/pages_controller_spec.rb:12:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET terms" do
           ^^^^^^^^^^^
spec/controllers/pages_controller_spec.rb:13:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/pages_controller_spec.rb:19:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET privacy" do
           ^^^^^^^^^^^^^
spec/controllers/pages_controller_spec.rb:20:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns http success" do
       ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:21:34: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe SheetsController, :type => :controller do
                                 ^^^^^^^^
spec/controllers/sheets_controller_spec.rb:26:26: C: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/controllers/sheets_controller_spec.rb:27:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:30:28: C: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/controllers/sheets_controller_spec.rb:31:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:39:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET index" do
           ^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:40:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "assigns all sheets as @sheets" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:47:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET show" do
           ^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:48:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "assigns the requested sheet as @sheet" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:50:18: C: Space inside { missing.
      get :show, {:id => sheet.to_param}, valid_session
                 ^
spec/controllers/sheets_controller_spec.rb:50:19: C: Use the new Ruby 1.9 hash syntax.
      get :show, {:id => sheet.to_param}, valid_session
                  ^^^^^^
spec/controllers/sheets_controller_spec.rb:50:40: C: Space inside } missing.
      get :show, {:id => sheet.to_param}, valid_session
                                       ^
spec/controllers/sheets_controller_spec.rb:55:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET new" do
           ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:56:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "assigns a new sheet as @sheet" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:62:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET edit" do
           ^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:63:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "assigns the requested sheet as @sheet" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:65:18: C: Space inside { missing.
      get :edit, {:id => sheet.to_param}, valid_session
                 ^
spec/controllers/sheets_controller_spec.rb:65:19: C: Use the new Ruby 1.9 hash syntax.
      get :edit, {:id => sheet.to_param}, valid_session
                  ^^^^^^
spec/controllers/sheets_controller_spec.rb:65:40: C: Space inside } missing.
      get :edit, {:id => sheet.to_param}, valid_session
                                       ^
spec/controllers/sheets_controller_spec.rb:70:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST create" do
           ^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:71:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    describe "with valid params" do
             ^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:72:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Sheet" do
         ^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:73:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/controllers/sheets_controller_spec.rb:74:25: C: Space inside { missing.
          post :create, {:sheet => valid_attributes}, valid_session
                        ^
spec/controllers/sheets_controller_spec.rb:74:26: C: Use the new Ruby 1.9 hash syntax.
          post :create, {:sheet => valid_attributes}, valid_session
                         ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:74:52: C: Space inside } missing.
          post :create, {:sheet => valid_attributes}, valid_session
                                                   ^
spec/controllers/sheets_controller_spec.rb:78:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "assigns a newly created sheet as @sheet" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:79:23: C: Space inside { missing.
        post :create, {:sheet => valid_attributes}, valid_session
                      ^
spec/controllers/sheets_controller_spec.rb:79:24: C: Use the new Ruby 1.9 hash syntax.
        post :create, {:sheet => valid_attributes}, valid_session
                       ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:79:50: C: Space inside } missing.
        post :create, {:sheet => valid_attributes}, valid_session
                                                 ^
spec/controllers/sheets_controller_spec.rb:84:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created sheet" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:85:23: C: Space inside { missing.
        post :create, {:sheet => valid_attributes}, valid_session
                      ^
spec/controllers/sheets_controller_spec.rb:85:24: C: Use the new Ruby 1.9 hash syntax.
        post :create, {:sheet => valid_attributes}, valid_session
                       ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:85:50: C: Space inside } missing.
        post :create, {:sheet => valid_attributes}, valid_session
                                                 ^
spec/controllers/sheets_controller_spec.rb:90:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    describe "with invalid params" do
             ^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:91:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "assigns a newly created but unsaved sheet as @sheet" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:92:23: C: Space inside { missing.
        post :create, {:sheet => invalid_attributes}, valid_session
                      ^
spec/controllers/sheets_controller_spec.rb:92:24: C: Use the new Ruby 1.9 hash syntax.
        post :create, {:sheet => invalid_attributes}, valid_session
                       ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:92:52: C: Space inside } missing.
        post :create, {:sheet => invalid_attributes}, valid_session
                                                   ^
spec/controllers/sheets_controller_spec.rb:97:23: C: Space inside { missing.
        post :create, {:sheet => invalid_attributes}, valid_session
                      ^
spec/controllers/sheets_controller_spec.rb:97:24: C: Use the new Ruby 1.9 hash syntax.
        post :create, {:sheet => invalid_attributes}, valid_session
                       ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:97:52: C: Space inside } missing.
        post :create, {:sheet => invalid_attributes}, valid_session
                                                   ^
spec/controllers/sheets_controller_spec.rb:98:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(response).to render_template("new")
                                            ^^^^^
spec/controllers/sheets_controller_spec.rb:103:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PUT update" do
           ^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:104:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    describe "with valid params" do
             ^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:105:28: C: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/controllers/sheets_controller_spec.rb:106:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:109:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested sheet" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:111:22: C: Space inside { missing.
        put :update, {:id => sheet.to_param, :sheet => new_attributes}, valid_session
                     ^
spec/controllers/sheets_controller_spec.rb:111:23: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => new_attributes}, valid_session
                      ^^^^^^
spec/controllers/sheets_controller_spec.rb:111:46: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => new_attributes}, valid_session
                                             ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:111:70: C: Space inside } missing.
        put :update, {:id => sheet.to_param, :sheet => new_attributes}, valid_session
                                                                     ^
spec/controllers/sheets_controller_spec.rb:111:81: C: Line is too long. [85/80]
        put :update, {:id => sheet.to_param, :sheet => new_attributes}, valid_session
                                                                                ^^^^^
spec/controllers/sheets_controller_spec.rb:113:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:116:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "assigns the requested sheet as @sheet" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:118:22: C: Space inside { missing.
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                     ^
spec/controllers/sheets_controller_spec.rb:118:23: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                      ^^^^^^
spec/controllers/sheets_controller_spec.rb:118:46: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                                             ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:118:72: C: Space inside } missing.
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                                                                       ^
spec/controllers/sheets_controller_spec.rb:118:81: C: Line is too long. [87/80]
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                                                                                ^^^^^^^
spec/controllers/sheets_controller_spec.rb:122:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the sheet" do
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:124:22: C: Space inside { missing.
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                     ^
spec/controllers/sheets_controller_spec.rb:124:23: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                      ^^^^^^
spec/controllers/sheets_controller_spec.rb:124:46: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                                             ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:124:72: C: Space inside } missing.
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                                                                       ^
spec/controllers/sheets_controller_spec.rb:124:81: C: Line is too long. [87/80]
        put :update, {:id => sheet.to_param, :sheet => valid_attributes}, valid_session
                                                                                ^^^^^^^
spec/controllers/sheets_controller_spec.rb:129:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    describe "with invalid params" do
             ^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:130:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "assigns the sheet as @sheet" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:132:22: C: Space inside { missing.
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                     ^
spec/controllers/sheets_controller_spec.rb:132:23: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                      ^^^^^^
spec/controllers/sheets_controller_spec.rb:132:46: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                                             ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:132:74: C: Space inside } missing.
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                                                                         ^
spec/controllers/sheets_controller_spec.rb:132:81: C: Line is too long. [89/80]
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                                                                                ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:138:22: C: Space inside { missing.
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                     ^
spec/controllers/sheets_controller_spec.rb:138:23: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                      ^^^^^^
spec/controllers/sheets_controller_spec.rb:138:46: C: Use the new Ruby 1.9 hash syntax.
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                                             ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:138:74: C: Space inside } missing.
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                                                                         ^
spec/controllers/sheets_controller_spec.rb:138:81: C: Line is too long. [89/80]
        put :update, {:id => sheet.to_param, :sheet => invalid_attributes}, valid_session
                                                                                ^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:139:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(response).to render_template("edit")
                                            ^^^^^^
spec/controllers/sheets_controller_spec.rb:144:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE destroy" do
           ^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:145:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested sheet" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:147:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/controllers/sheets_controller_spec.rb:148:26: C: Space inside { missing.
        delete :destroy, {:id => sheet.to_param}, valid_session
                         ^
spec/controllers/sheets_controller_spec.rb:148:27: C: Use the new Ruby 1.9 hash syntax.
        delete :destroy, {:id => sheet.to_param}, valid_session
                          ^^^^^^
spec/controllers/sheets_controller_spec.rb:148:48: C: Space inside } missing.
        delete :destroy, {:id => sheet.to_param}, valid_session
                                               ^
spec/controllers/sheets_controller_spec.rb:152:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the sheets list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/sheets_controller_spec.rb:154:24: C: Space inside { missing.
      delete :destroy, {:id => sheet.to_param}, valid_session
                       ^
spec/controllers/sheets_controller_spec.rb:154:25: C: Use the new Ruby 1.9 hash syntax.
      delete :destroy, {:id => sheet.to_param}, valid_session
                        ^^^^^^
spec/controllers/sheets_controller_spec.rb:154:46: C: Space inside } missing.
      delete :destroy, {:id => sheet.to_param}, valid_session
                                             ^
spec/factories/sheets.rb:9:11: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    price "9.99"
          ^^^^^^
spec/factories/sheets.rb:10:11: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    title "MyString"
          ^^^^^^^^^^
spec/factories/sheets.rb:12:14: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    uploader ""
             ^^
spec/factories/sheets.rb:13:17: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    description "MyText"
                ^^^^^^^^
spec/helpers/order_helper_spec.rb:13:29: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe OrderHelper, :type => :helper do
                            ^^^^^^^^
spec/helpers/pages_helper_spec.rb:13:29: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe PagesHelper, :type => :helper do
                            ^^^^^^^^
spec/helpers/sheets_helper_spec.rb:13:30: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe SheetsHelper, :type => :helper do
                             ^^^^^^^^
spec/models/admin_user_spec.rb:3:27: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe AdminUser, :type => :model do
                          ^^^^^^^^
spec/models/asset_spec.rb:3:23: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe Asset, :type => :model do
                      ^^^^^^^^
spec/models/flag_spec.rb:3:22: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe Flag, :type => :model do
                     ^^^^^^^^
spec/models/order_spec.rb:3:23: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe Order, :type => :model do
                      ^^^^^^^^
spec/models/sheet_spec.rb:3:23: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe Sheet, :type => :model do
                      ^^^^^^^^
spec/models/user_spec.rb:3:22: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe User, :type => :model do
                     ^^^^^^^^
spec/rails_helper.rb:2:5: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= 'test'
    ^^^^^^^^^^^
spec/rails_helper.rb:4:26: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require File.expand_path("../../config/environment", __FILE__)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:14:21: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Dir[Rails.root.join("spec/support/**/*.rb")].each { |f| require f }
                    ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/sheets_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Sheets", :type => :request do
               ^^^^^^^^
spec/requests/sheets_spec.rb:3:26: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "Sheets", :type => :request do
                         ^^^^^^^^
spec/requests/sheets_spec.rb:4:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /sheets" do
           ^^^^^^^^^^^^^
spec/requests/sheets_spec.rb:5:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "works! (now write some real specs)" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:1:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:3:34: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe SheetsController, :type => :routing do
                                 ^^^^^^^^
spec/routing/sheets_routing_spec.rb:4:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/sheets_routing_spec.rb:6:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:7:14: C: Use the new Ruby 1.9 hash syntax.
      expect(:get => "/sheets").to route_to("sheets#index")
             ^^^^^^^
spec/routing/sheets_routing_spec.rb:7:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets").to route_to("sheets#index")
                     ^^^^^^^^^
spec/routing/sheets_routing_spec.rb:7:45: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets").to route_to("sheets#index")
                                            ^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:10:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:11:14: C: Use the new Ruby 1.9 hash syntax.
      expect(:get => "/sheets/new").to route_to("sheets#new")
             ^^^^^^^
spec/routing/sheets_routing_spec.rb:11:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets/new").to route_to("sheets#new")
                     ^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:11:49: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets/new").to route_to("sheets#new")
                                                ^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:14:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:15:14: C: Use the new Ruby 1.9 hash syntax.
      expect(:get => "/sheets/1").to route_to("sheets#show", :id => "1")
             ^^^^^^^
spec/routing/sheets_routing_spec.rb:15:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets/1").to route_to("sheets#show", :id => "1")
                     ^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:15:47: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets/1").to route_to("sheets#show", :id => "1")
                                              ^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:15:62: C: Use the new Ruby 1.9 hash syntax.
      expect(:get => "/sheets/1").to route_to("sheets#show", :id => "1")
                                                             ^^^^^^
spec/routing/sheets_routing_spec.rb:15:69: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets/1").to route_to("sheets#show", :id => "1")
                                                                    ^^^
spec/routing/sheets_routing_spec.rb:18:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:19:14: C: Use the new Ruby 1.9 hash syntax.
      expect(:get => "/sheets/1/edit").to route_to("sheets#edit", :id => "1")
             ^^^^^^^
spec/routing/sheets_routing_spec.rb:19:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets/1/edit").to route_to("sheets#edit", :id => "1")
                     ^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:19:52: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets/1/edit").to route_to("sheets#edit", :id => "1")
                                                   ^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:19:67: C: Use the new Ruby 1.9 hash syntax.
      expect(:get => "/sheets/1/edit").to route_to("sheets#edit", :id => "1")
                                                                  ^^^^^^
spec/routing/sheets_routing_spec.rb:19:74: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:get => "/sheets/1/edit").to route_to("sheets#edit", :id => "1")
                                                                         ^^^
spec/routing/sheets_routing_spec.rb:22:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:23:14: C: Use the new Ruby 1.9 hash syntax.
      expect(:post => "/sheets").to route_to("sheets#create")
             ^^^^^^^^
spec/routing/sheets_routing_spec.rb:23:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:post => "/sheets").to route_to("sheets#create")
                      ^^^^^^^^^
spec/routing/sheets_routing_spec.rb:23:46: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:post => "/sheets").to route_to("sheets#create")
                                             ^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:26:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:27:14: C: Use the new Ruby 1.9 hash syntax.
      expect(:put => "/sheets/1").to route_to("sheets#update", :id => "1")
             ^^^^^^^
spec/routing/sheets_routing_spec.rb:27:22: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:put => "/sheets/1").to route_to("sheets#update", :id => "1")
                     ^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:27:47: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:put => "/sheets/1").to route_to("sheets#update", :id => "1")
                                              ^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:27:64: C: Use the new Ruby 1.9 hash syntax.
      expect(:put => "/sheets/1").to route_to("sheets#update", :id => "1")
                                                               ^^^^^^
spec/routing/sheets_routing_spec.rb:27:71: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:put => "/sheets/1").to route_to("sheets#update", :id => "1")
                                                                      ^^^
spec/routing/sheets_routing_spec.rb:30:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:31:14: C: Use the new Ruby 1.9 hash syntax.
      expect(:delete => "/sheets/1").to route_to("sheets#destroy", :id => "1")
             ^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:31:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:delete => "/sheets/1").to route_to("sheets#destroy", :id => "1")
                        ^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:31:50: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:delete => "/sheets/1").to route_to("sheets#destroy", :id => "1")
                                                 ^^^^^^^^^^^^^^^^
spec/routing/sheets_routing_spec.rb:31:68: C: Use the new Ruby 1.9 hash syntax.
      expect(:delete => "/sheets/1").to route_to("sheets#destroy", :id => "1")
                                                                   ^^^^^^
spec/routing/sheets_routing_spec.rb:31:75: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(:delete => "/sheets/1").to route_to("sheets#destroy", :id => "1")
                                                                          ^^^
spec/spec_helper.rb:1:81: C: Line is too long. [92/80]
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
                                                                                ^^^^^^^^^^^^
spec/spec_helper.rb:3:81: C: Line is too long. [84/80]
# The generated `.rspec` file contains `--require spec_helper` which will cause this
                                                                                ^^^^
spec/spec_helper.rb:4:81: C: Line is too long. [81/80]
# file to always be loaded, without a need to explicitly require it in any files.
                                                                                ^
spec/spec_helper.rb:17:21: W: Unused block argument - config. You can omit the argument if you don't care about it.
RSpec.configure do |config|
                    ^^^^^^
spec/spec_helper.rb:20:1: C: Do not use block comments.
=begin
^^^^^^
spec/views/order/create.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "order/create.html.erb", :type => :view do
               ^^^^^^^^^^^^^^^^^^^^^^^
spec/views/order/create.html.erb_spec.rb:3:41: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "order/create.html.erb", :type => :view do
                                        ^^^^^^^^
spec/views/order/new.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "order/new.html.erb", :type => :view do
               ^^^^^^^^^^^^^^^^^^^^
spec/views/order/new.html.erb_spec.rb:3:38: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "order/new.html.erb", :type => :view do
                                     ^^^^^^^^
spec/views/order/paypal_checkout.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "order/paypal_checkout.html.erb", :type => :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/order/paypal_checkout.html.erb_spec.rb:3:50: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "order/paypal_checkout.html.erb", :type => :view do
                                                 ^^^^^^^^
spec/views/pages/about.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "pages/about.html.erb", :type => :view do
               ^^^^^^^^^^^^^^^^^^^^^^
spec/views/pages/about.html.erb_spec.rb:3:40: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "pages/about.html.erb", :type => :view do
                                       ^^^^^^^^
spec/views/pages/privacy.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "pages/privacy.html.erb", :type => :view do
               ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/pages/privacy.html.erb_spec.rb:3:42: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "pages/privacy.html.erb", :type => :view do
                                         ^^^^^^^^
spec/views/pages/terms.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "pages/terms.html.erb", :type => :view do
               ^^^^^^^^^^^^^^^^^^^^^^
spec/views/pages/terms.html.erb_spec.rb:3:40: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "pages/terms.html.erb", :type => :view do
                                       ^^^^^^^^
spec/views/sheets/edit.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "sheets/edit", :type => :view do
               ^^^^^^^^^^^^^
spec/views/sheets/edit.html.erb_spec.rb:3:31: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "sheets/edit", :type => :view do
                              ^^^^^^^^
spec/views/sheets/edit.html.erb_spec.rb:5:42: C: Do not use parentheses for method calls with no arguments.
    @sheet = assign(:sheet, Sheet.create!())
                                         ^
spec/views/sheets/edit.html.erb_spec.rb:8:6: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit sheet form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/sheets/edit.html.erb_spec.rb:11:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", sheet_path(@sheet), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/sheets/edit.html.erb_spec.rb:11:67: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", sheet_path(@sheet), "post" do
                                                                  ^^^^^^
spec/views/sheets/index.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "sheets/index", :type => :view do
               ^^^^^^^^^^^^^^
spec/views/sheets/index.html.erb_spec.rb:3:32: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "sheets/index", :type => :view do
                               ^^^^^^^^
spec/views/sheets/index.html.erb_spec.rb:6:20: C: Do not use parentheses for method calls with no arguments.
      Sheet.create!(),
                   ^
spec/views/sheets/index.html.erb_spec.rb:7:20: C: Do not use parentheses for method calls with no arguments.
      Sheet.create!()
                   ^
spec/views/sheets/index.html.erb_spec.rb:11:6: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of sheets" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/sheets/new.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "sheets/new", :type => :view do
               ^^^^^^^^^^^^
spec/views/sheets/new.html.erb_spec.rb:3:30: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "sheets/new", :type => :view do
                             ^^^^^^^^
spec/views/sheets/new.html.erb_spec.rb:5:29: C: Do not use parentheses for method calls with no arguments.
    assign(:sheet, Sheet.new())
                            ^
spec/views/sheets/new.html.erb_spec.rb:8:6: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new sheet form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/sheets/new.html.erb_spec.rb:11:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", sheets_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/sheets/new.html.erb_spec.rb:11:60: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", sheets_path, "post" do
                                                           ^^^^^^
spec/views/sheets/show.html.erb_spec.rb:3:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "sheets/show", :type => :view do
               ^^^^^^^^^^^^^
spec/views/sheets/show.html.erb_spec.rb:3:31: C: Use the new Ruby 1.9 hash syntax.
RSpec.describe "sheets/show", :type => :view do
                              ^^^^^^^^
spec/views/sheets/show.html.erb_spec.rb:5:42: C: Do not use parentheses for method calls with no arguments.
    @sheet = assign(:sheet, Sheet.create!())
                                         ^
spec/views/sheets/show.html.erb_spec.rb:8:6: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:5:1: C: Missing top-level class documentation comment.
class ActiveSupport::TestCase
^^^^^
test/test_helper.rb:5:7: C: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:6:81: C: Line is too long. [82/80]
  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
                                                                                ^^
test/test_helper.rb:8:81: C: Line is too long. [89/80]
  # Note: You'll currently still have to declare fixtures explicitly in integration tests
                                                                                ^^^^^^^^^

156 files inspected, 1361 offenses detected
